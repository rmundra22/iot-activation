<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IoT Activation</title>
    <description>Welcome to IoT</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 20 Dec 2018 18:32:26 +0100</pubDate>
    <lastBuildDate>Thu, 20 Dec 2018 18:32:26 +0100</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Raspberry Ethernet</title>
        <description>&lt;h1 id=&quot;control-your-raspberry-with-a-network-cable&quot;&gt;Control your Raspberry with a Network cable&lt;/h1&gt;

&lt;p&gt;If you want to connect your Raspberry to your computer via a network cable, 
you must ensure that both devices are configured for the same network.&lt;/p&gt;

&lt;p&gt;The easiest way is to set up a static IP. In order to do this, 
we will assign an IP of our choice to the configuration that you assign for the configuration.&lt;/p&gt;

&lt;p&gt;Open a terminal windows use the next command ‘sudo ifconfig -a’&lt;/p&gt;

&lt;p&gt;If you are connected by cable you will see an IP address assigned.
This IP has been assigned automatically and will change whenever you establish a new connection.&lt;/p&gt;

&lt;p&gt;To set a default IP address edit the file &lt;strong&gt;/etc/dhcpcd.conf&lt;/strong&gt;
use the command &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo nano /etc/dhcpcd.conf&lt;/code&gt; at the command prompt.
Scroll to the bottom of the script, and add the following lines&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	interface eth0

	static ip_address=192.168.0.2/24
	static routers=192.168.0.1
	static domain_name_servers=192.168.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Save the file with &lt;strong&gt;Ctrl+O&lt;/strong&gt;  and close it with &lt;strong&gt;Ctrl+X&lt;/strong&gt;
review the changes whit the command &lt;code class=&quot;highlighter-rouge&quot;&gt;cat /etc/dhcpcd.conf&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Dec 2018 18:07:00 +0100</pubDate>
        <link>http://localhost:4000/raspberrysshethernet.html</link>
        <guid isPermaLink="true">http://localhost:4000/raspberrysshethernet.html</guid>
        
        
        <category>raspberry</category>
        
      </item>
    
      <item>
        <title>Raspberry Starter Kit</title>
        <description>&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#raspberry-pi-starterkit-for-iot-activation&quot;&gt;Raspberry Pi Starterkit for IoT-Activation&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#raspberry-pi-3-b&quot;&gt;Raspberry Pi 3 B+&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#microsd-with-pre-installer-noobs-raspberry-pi-os&quot;&gt;MicroSD with pre-installer NOOBS (Raspberry-Pi OS)&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#what-is-raspbian&quot;&gt;What is Raspbian?&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#raspberry-pi-camera-v2&quot;&gt;Raspberry Pi Camera V2&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#raspberry-pi-sense-hat&quot;&gt;Raspberry Pi Sense HAT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#huawei-ms2131-usb-stick&quot;&gt;Huawei MS2131 USB Stick&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#telefonica-sim-card&quot;&gt;Telefonica SIM Card&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#getting-started-with-your-raspberry&quot;&gt;Getting started with your Raspberry&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#install-so-raspbian&quot;&gt;Install SO (Raspbian)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#connect-with-your-wi-fi-and-update-the-software&quot;&gt;Connect with your Wi-Fi&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tenefonicas-connection&quot;&gt;Tenefonica’s Connection.&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#use-a-remote-access-enable-ssh-server-on-raspbian&quot;&gt;Use a remote access&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;raspberry-pi-starterkit-for-iot-activation&quot;&gt;Raspberry Pi Starterkit for IoT-Activation&lt;/h1&gt;

&lt;p&gt;Your Raspberry kit is composed by:&lt;/p&gt;

&lt;h3 id=&quot;raspberry-pi-3-b&quot;&gt;Raspberry Pi 3 B+&lt;/h3&gt;
&lt;p&gt;The Raspberry Pi is a small computer developed by the Raspberry Pi Foundation to promote teaching of basic computer science.&lt;/p&gt;

&lt;p&gt;It is a Single Board Computer (SBC). All the necessary components are integrated in the same board.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;RaspiSquematic&quot; src=&quot;pictures/Raspberry/RaspiSquematic.png&quot; width=&quot;500&quot; height=&quot;400&quot; /&gt;
&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;BCM2837&lt;/strong&gt;
This is the Broadcom chip used in the Raspberry Pi 3 with a quad-core ARM Cortex A53 (ARMv8) cluster&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;USB ports&lt;/strong&gt;
these allows you to connect USB peripherals like mouse, keyboard, USB drive, modem 3G …&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;SD card slot&lt;/strong&gt;
You will install the Operating System in a microSD card that will be allocated here. This card also keep all your files save.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Ethernet, Wifi and BL&lt;/strong&gt;
Three diferent interfaces, to enables different connection ways.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Audio jack&lt;/strong&gt;
You can connect headphones or speakers&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;HDMI port&lt;/strong&gt;
You can use the output for connect the Raspberry to a monitor.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Micro USB power connector&lt;/strong&gt; 
This is where you connect the power supply&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;GPIO ports&lt;/strong&gt;
These allow you to connect electronic components such as LEDs, buttons to the Raspberry.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;case-for-raspberry&quot;&gt;Case for Raspberry&lt;/h3&gt;
&lt;p&gt;Removable side panels and lid for easy access to GPIO, camera and display connectors.
With light pipes for power and activity LEDs&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;Raspi_Case&quot; src=&quot;pictures/Raspberry/Raspi_Case.png&quot; width=&quot;500&quot; height=&quot;400&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;microsd-with-pre-installer-noobs-raspberry-pi-os&quot;&gt;MicroSD with pre-installer NOOBS (Raspberry-Pi OS)&lt;/h3&gt;
&lt;p&gt;Official 16GB MicroSD Card and Full-Size Adapter&lt;/p&gt;

&lt;h5 id=&quot;noobs-operating-system&quot;&gt;NOOBS Operating System&lt;/h5&gt;
&lt;p&gt;Is an easy operating system installer which contains Raspbian&lt;/p&gt;

&lt;h4 id=&quot;what-is-raspbian&quot;&gt;What is Raspbian?&lt;/h4&gt;
&lt;p&gt;Raspbian is a free operating system based on Debian optimized for the Raspberry Pi hardware. 
An operating system is the set of basic programs and utilities that make your Raspberry Pi run. 
However, Raspbian provides pre-compiled software bundled in a nice format for easy installation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Raspbian_Desktop.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;raspberry-pi-universal-power-supply-25a-51v&quot;&gt;Raspberry Pi universal Power Supply 2.5A 5.1V&lt;/h3&gt;
&lt;p&gt;Interchangeable heads for different countries and 1.5m lead&lt;/p&gt;

&lt;p&gt;Protection for: short circuit, over current and over voltage.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;Raspi_PowerSupply&quot; src=&quot;pictures/Raspberry/Raspi_PowerSupply.png&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;raspberry-pi-camera-v2&quot;&gt;Raspberry Pi Camera V2&lt;/h3&gt;
&lt;p&gt;It allows you to record high-definition video and take pics.
The v2 Camera Module is provide with a Sony IMX219 8-megapixel sensor.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;Raspi_Camera&quot; src=&quot;pictures/Raspberry/Raspi_Camera.png&quot; width=&quot;500&quot; height=&quot;400&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;raspberry-pi-sense-hat&quot;&gt;Raspberry Pi Sense HAT&lt;/h3&gt;
&lt;p&gt;It is a board that includes different devices and sensors&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;8x8 RGB LED matrix&lt;/li&gt;
  &lt;li&gt;joystick (5 buttons: up, down, left, right and press)&lt;/li&gt;
  &lt;li&gt;Gyroscope&lt;/li&gt;
  &lt;li&gt;Accelerometer&lt;/li&gt;
  &lt;li&gt;Magnetometer&lt;/li&gt;
  &lt;li&gt;Temperature&lt;/li&gt;
  &lt;li&gt;Barometric pressure&lt;/li&gt;
  &lt;li&gt;Humidity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;RaspberryPi_HAT.md&quot;&gt;Click&lt;/a&gt; to learn how to use it&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	&lt;a href=&quot;RaspberryPi_HAT.md&quot;&gt;
		&lt;img src=&quot;pictures/Raspberry/Raspi_SenseHAT.png&quot; /&gt;
	&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;:pill: Did you know that it was made especially for being launched to the International Space Station in December 2015?&lt;/p&gt;

&lt;h3 id=&quot;huawei-ms2131-usb-stick&quot;&gt;Huawei MS2131 USB Stick&lt;/h3&gt;
&lt;p&gt;The Huawei USB Modem MS2131i-8 is a robust USB stick designed for industrial.
Withstands high temperatures and humidity conditions.&lt;/p&gt;

&lt;p&gt;The MS2131 is a quad-band HSPA+ modem with a transmission speed of up to 21 Mbps (D/L) and 5.76 Mbps (U/L).&lt;/p&gt;

&lt;p&gt;Also has the possibility to be connected to an external antenna via his CRC9 connector.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;Huawei_MS2121&quot; src=&quot;pictures/Raspberry/Huawei_MS2121.png&quot; width=&quot;600&quot; height=&quot;250&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;telefonica-sim-card&quot;&gt;Telefonica SIM Card&lt;/h3&gt;
&lt;p&gt;this little one makes you enjoy all the advantages of the Telefonica network. 
Take care of her, she will be your partner into the IoT world.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;Telefonica_SIM&quot; src=&quot;pictures/miscellaneous/Telefonica_SIM.png&quot; width=&quot;300&quot; height=&quot;210&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;getting-started-with-your-raspberry&quot;&gt;Getting started with your Raspberry&lt;/h1&gt;

&lt;h2 id=&quot;install-so-raspbian&quot;&gt;Install SO (Raspbian)&lt;/h2&gt;

&lt;p&gt;You will start the OS installation, prepare the following material:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A Raspberry Pi&lt;/li&gt;
  &lt;li&gt;MicroSD with pre-installer NOOBS&lt;/li&gt;
  &lt;li&gt;Monitor with HDMI connector&lt;/li&gt;
  &lt;li&gt;USB keyboard and mouse&lt;/li&gt;
  &lt;li&gt;USB Power Supply&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To begin, carefully follow the instructions below.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Connect the Raspberry to HDMI monitor.&lt;/li&gt;
  &lt;li&gt;Insert the microSD card into the slot on the Raspberry.&lt;/li&gt;
  &lt;li&gt;Plug a keyboard and mouse in the Raspberry’s USB slot.&lt;/li&gt;
  &lt;li&gt;Connect the USB Power Supply using the correct head from your country. 
(Fot this step is necessary do previously the 2 first steps)&lt;/li&gt;
  &lt;li&gt;Select the Raspbian option in the window.&lt;/li&gt;
  &lt;li&gt;Select your language, and the corresponding keyboard type&lt;/li&gt;
  &lt;li&gt;If you wish, you can now configure the wifi connection or wait for the next section.&lt;/li&gt;
  &lt;li&gt;Press the install button.&lt;/li&gt;
  &lt;li&gt;Accepts the confirmation window and waits until the installation is complete .&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Raspberry/Raspi_Install_NOOBS.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Congrats!, You have just started at the IoT world.
We will continue setting up your network interfaces.&lt;/p&gt;

&lt;h2 id=&quot;connect-to-your-wi-fi-network-and-update-the-software&quot;&gt;Connect to your Wi-Fi network and Update the Software&lt;/h2&gt;

&lt;p&gt;First of all, you should update all the packages and software running on your board. This process can consume a huge amount of data, so we highly recommend you to start setting up wifi interfaces.&lt;/p&gt;

&lt;p&gt;Set &lt;strong&gt;Ctrl+Alt+T&lt;/strong&gt; to open a Terminal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Raspberry/Raspi_terminal.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sometimes some errors may occur because the system dates are not update. 
To avoid these errors you can update the Raspberry time with the following command.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo date -s &quot;05/23/2018 12:00:00&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For connect with your Wi-Fi network, press on the top right corner in the LAN icon and select your network with your password if is necesary.&lt;/p&gt;

&lt;p&gt;If  wifi is disabled, you have to access to the Raspberry configuration.&lt;/p&gt;

&lt;p&gt;In this case open a terminal and type&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo raspi-config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This command will open a window like the one in the following image.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Select &lt;strong&gt;Network Options&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Wi-fi&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select your country&lt;/li&gt;
  &lt;li&gt;Now the wifi is activate&lt;/li&gt;
  &lt;li&gt;Enter your &lt;strong&gt;SSID&lt;/strong&gt; (Name of your wifi network)&lt;/li&gt;
  &lt;li&gt;Enter your &lt;strong&gt;password&lt;/strong&gt; if is necesary&lt;/li&gt;
  &lt;li&gt;Chose &lt;strong&gt;FINISH&lt;/strong&gt; with the tab key&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Raspberry/Raspi_config_wifi.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sometimes some corporate networks require additional validation. 
In this case it will be necessary to proceed correctly or contact the network administrator.&lt;/p&gt;

&lt;p&gt;:thumbsup:  If you dont want to run out of data please set up the wi-fi connection, before running al these commands!&lt;/p&gt;

&lt;p&gt;Open a Terminal windows and update the repository with the command&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Wait it finish&lt;/p&gt;

&lt;p&gt;Then it is necessary install some packages.
We recommend you write the lines on the console one by one and wait for it to be installed 
to continue with the next.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install network-manager
sudo apt-get install gedit	
sudo apt-get install python
sudo apt-get install sense-hat
sudo apt-get install nmap
sudo apt-get install crontab
sudo apt-get install realvnc-vnc-server realvnc-vnc-viewer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tenefonicas-connection&quot;&gt;Tenefonica’s Connection.&lt;/h2&gt;
&lt;p&gt;Connect the USB modem MS2131 to the Raspberry’s usb.&lt;/p&gt;

&lt;p&gt;Once connected, you can check that your raspberry recognizes the device using the command &lt;code class=&quot;highlighter-rouge&quot;&gt;lsusb&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This command lists all devices connected USB ports of your device, checks how when connecting and disconnecting 
the modem the device appears and disappears from the list.&lt;/p&gt;

&lt;p&gt;Create the USB Stick connection in a command line&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nmcli con add type gsm ifname &quot;*&quot; con-name USBStick apn TelefonicaSIM_APN user telefonica password telefonica
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;:heavy_exclamation_mark:  The field &lt;strong&gt;TelefonicaSIM_APN&lt;/strong&gt; must be replaced by the APN address of your Telefonica SIM card.
In this case, the APN of your SIM card will be provided by Telefonica. 
However, you will be able to identify it through access to &lt;a href=&quot;Movistar_Kite_Platform.md&quot;&gt;Kite.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If your SIM uses a PIN code, add to the end of the command: &lt;code class=&quot;highlighter-rouge&quot;&gt;pin 0000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now the connection USB-Stick has been created.
Look at it with the command&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ifconfig ppp0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;pictures/Raspberry/Raspi_gsm_test.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;the inet adrress label shows your Raspberry’s IP&lt;/p&gt;

&lt;h5 id=&quot;how-test-your-new-connection&quot;&gt;How Test your new connection&lt;/h5&gt;
&lt;p&gt;:thumbsup: To make sure that the transmission is done through the USB modem, in this step we recommend disabling the wifi connection. 
To deactivate the wifi connection click on the network symbol in the upper right corner 
and press &lt;strong&gt;Turn off Wi-fi&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A easiest way of test your connectivity is make ping a website.
Use the next command&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ping www.telefonica.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Another way to test it, It is downloading a file from a server and read it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://jsonplaceholder.typicode.com/todos/1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to check the downloaded file you can use the cat command&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you should be able to read something close to this &lt;strong&gt;json&lt;/strong&gt; example&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;userId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;delectus aut autem&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;:thumbsup: To tidy up, 
we recommend you delete the test file with the following command.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rm 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have followed all these steps, there should be no problem. but if not, your SIM card may not be activated.&lt;/p&gt;

&lt;p&gt;Luckily you have access to the Kite Platform and you can manage its status
check out our tutorial &lt;a href=&quot;Movistar_Kite_Platform.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;use-a-remote-access-enable-ssh-server-on-raspbian&quot;&gt;Use a remote access. Enable SSH server on Raspbian.&lt;/h2&gt;

&lt;p&gt;You can access to the command line and manage the Raspberry using your pc, 
but is necessary a SSH connection&lt;/p&gt;

&lt;p&gt;Open a terminal window and enter&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo systemctl enable ssh
 sudo systemctl start ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Alternatively, you can enable the SSH connection using the configuration interface.
opens the menu with the following command.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo raspi-config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Select &lt;strong&gt;Interfacing Options&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;SSH&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;YES&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Ok&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Chose &lt;strong&gt;FINISH&lt;/strong&gt; with the tab&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you reboot the device without changing the default user and password, 
with SSH connection enabled, a warning pop up message will appear showing risks involved.&lt;/p&gt;

&lt;h5 id=&quot;change-user-password&quot;&gt;Change user Password&lt;/h5&gt;

&lt;p&gt;When you installed the OS, a default user was been created.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;default user     'pi'
default password 'raspberry' 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;for security reasons is recommended set a new password&lt;/p&gt;

&lt;p&gt;Type in the terminal window&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; passwd 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;Write the current-password ** ‘raspberry’ **&lt;/li&gt;
  &lt;li&gt;Enter the &lt;strong&gt;new-password&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Re-enter the &lt;strong&gt;new-password&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Your password has now been changed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now for connect with your Raspberry you need installer a SSH client on your computer.&lt;/p&gt;

&lt;h5 id=&quot;set-up-your-ssh-client-in-linux&quot;&gt;Set up your SSH client in Linux&lt;/h5&gt;
&lt;p&gt;from a terminal window:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh –p 22 pi@00.00.00.00 -&amp;gt; Raspberry IP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;set-up-your-ssh-client-in-windows&quot;&gt;Set up your SSH client in Windows&lt;/h5&gt;

&lt;p&gt;There is a wide variety of SSH clients that you can use. Many of them are free!!&lt;/p&gt;

&lt;p&gt;But if you know which one to choose, we can recommend download Putty from www.putty.org and install it&lt;/p&gt;

&lt;p&gt;Open putty and write the Raspberry’s IP in the Host Name box
Select SSH like Connection type and Port 22
use the Raspberry default user &lt;strong&gt;pi&lt;/strong&gt; and the new-password selected on the previous chapter&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;Putty_Config&quot; src=&quot;pictures/miscellaneous/Putty_Config.png&quot; /&gt;
&lt;/p&gt;

&lt;h4 id=&quot;control-your-raspberry-with-a-network-cable&quot;&gt;Control your raspberry with a network cable&lt;/h4&gt;

&lt;p&gt;If you prefer it is also possible to control your Raspberry pi connected to your pc via a network cable (Ethernet)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;SSH_Ethernet.md&quot;&gt;How to connect via Ethernet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 19 Dec 2018 18:07:00 +0100</pubDate>
        <link>http://localhost:4000/raspberrypistarterkit.html</link>
        <guid isPermaLink="true">http://localhost:4000/raspberrypistarterkit.html</guid>
        
        
        <category>raspberry</category>
        
      </item>
    
      <item>
        <title>Python Hello World</title>
        <description>&lt;h1 id=&quot;your-first-python-script&quot;&gt;Your first python Script!&lt;/h1&gt;

&lt;h1 id=&quot;what-is-python&quot;&gt;What is python!&lt;/h1&gt;

&lt;p&gt;Python is an interpreted, high-level programming language for general-purpose programming.
It provides constructs that enable clear programming on both small and large scales&lt;/p&gt;

&lt;h1 id=&quot;how-to-program-using-the-terminal-window&quot;&gt;How to program using the Terminal Window&lt;/h1&gt;

&lt;p&gt;Opena a terminal widows with keys &lt;strong&gt;Ctrl+Alt+T&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a new file
type &lt;code class=&quot;highlighter-rouge&quot;&gt;nano&lt;/code&gt; in the command line to open the text editor.&lt;/p&gt;

&lt;p&gt;If you know other text editors, you can use your preferred one&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/miscellaneous/python_nano.png&quot; alt=&quot;pick&quot; /&gt;&lt;/p&gt;

&lt;p&gt;copy the following text:
You can also find it here &lt;a href=&quot;../scripts/HelloWorld.py&quot;&gt;HelloWorld.py&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#! /usr/bin/python
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#this is a comment
#import the librery time
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello IoT World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Goodbye IoT World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;pictures/miscellaneous/python_nano_sript.png&quot; alt=&quot;pick&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To exit and save the changes press &lt;strong&gt;Ctrl+X&lt;/strong&gt;. Select &lt;strong&gt;Y&lt;/strong&gt; to save and type the name of the file ** “HelloWorld.py” **.&lt;/p&gt;

&lt;p&gt;You can check the file with the command &lt;code class=&quot;highlighter-rouge&quot;&gt;cat HelloWorld.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you can run the script and see what happens&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python HelloWorld.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 19 Dec 2018 18:07:00 +0100</pubDate>
        <link>http://localhost:4000/raspberrypipython.html</link>
        <guid isPermaLink="true">http://localhost:4000/raspberrypipython.html</guid>
        
        
        <category>raspberry</category>
        
      </item>
    
      <item>
        <title>Raspberry PI Hat</title>
        <description>&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#raspsberry-sense-hat-to-aws-iot&quot;&gt;Raspsberry: Sense-HAT to AWS-IoT&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#getting-started-with-the-sense-hat&quot;&gt;Getting started with the Sense HAT&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#what-you-will-need&quot;&gt;What you will need&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#what-you-will-learn&quot;&gt;What you will learn&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#open-an-account-at-aws-iot&quot;&gt;Open an account at AWS-IoT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#create-raspberry-pi-thing-in-aws-iot&quot;&gt;Create Raspberry Pi thing in AWS-IoT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#what-is-mqtt&quot;&gt;What is MQTT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#test-your-certificates-with-mqttfx&quot;&gt;Test your Certificates with MQTT.fx&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#how-to-comunicate-with-aws&quot;&gt;How to comunicate with AWS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-to-start-with-the-project&quot;&gt;How to Start with the project&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#execute-the-code-in-your-raspberry&quot;&gt;Execute the code in your Raspberry&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#send-command-from-mqttfx&quot;&gt;Send command from MQTT.fx&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#execute-your-project-and-enjoy&quot;&gt;Execute your project and enjoy!!&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#execute-the-script&quot;&gt;Execute it&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#check-the-shadow-state&quot;&gt;Check the Shadow&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#watch-the-led-screen&quot;&gt;LED screen&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#send-a-command&quot;&gt;Send a command&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;raspsberry-sense-hat-to-aws-iot&quot;&gt;Raspsberry: Sense-HAT to AWS-IoT&lt;/h1&gt;
&lt;p&gt;For this project, we will sample the different sensors on the board and publish them in AWS. 
You will also be able to send different commands from the MQTT.fx interface that will be received on your Raspberry.&lt;/p&gt;

&lt;p&gt;The HAT sensor will take measurements of your sensors by publishing them in the shadow, 
showing them also in the LED display.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;      
	  &lt;img title=&quot;Project_med&quot; src=&quot;pictures/schematics/overview_rasp_AWS.png&quot; /&gt;	  
&lt;/p&gt;

&lt;h2 id=&quot;getting-started-with-the-sense-hat&quot;&gt;Getting started with the Sense HAT&lt;/h2&gt;

&lt;p&gt;The Sense HAT is an add-on board for the Raspberry Pi. 
The board allows you to make measurements of temperature, humidity, pressure, and orientation 
and to output information using the LED matrix.&lt;/p&gt;

&lt;p&gt;Installing and using your Sense HAT is easy, 
just follow our tutorial below to get started!&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;Raspi_SenseHAT&quot; src=&quot;pictures/Raspberry/Raspi_SenseHAT.gif&quot; href=&quot;RaspberryPi_HAT.md&quot; width=&quot;400&quot; height=&quot;300&quot; /&gt;
&lt;/p&gt;

&lt;h4 id=&quot;what-you-will-need&quot;&gt;What you will need&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Complet succeesfully the Raspberry Pi Starterkit tutorial&lt;/li&gt;
  &lt;li&gt;Raspberry Pi with Raspbian&lt;/li&gt;
  &lt;li&gt;Raspberry Pi Sense HAT&lt;/li&gt;
  &lt;li&gt;Keyboar and monitor or SSH connection&lt;/li&gt;
  &lt;li&gt;AWS account&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;what-you-will-learn&quot;&gt;What you will learn&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Control the Sense HAT using Python&lt;/li&gt;
  &lt;li&gt;Register a device on AWS&lt;/li&gt;
  &lt;li&gt;Generate credentials for AWS&lt;/li&gt;
  &lt;li&gt;Take measurements and display them in the LED matrix&lt;/li&gt;
  &lt;li&gt;Establish a communication with AWS using MQTT&lt;/li&gt;
  &lt;li&gt;Send commands to the device remotely&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have successfully completed the Raspberry Starterkit tutorial, all the necessary software is already updated.&lt;/p&gt;

&lt;p&gt;First of all, you should know that you are going to manage your Sense HAT using Python. 
If you have any questions about how to run your code, do not forget to visit our 
&lt;a href=&quot;RaspberryPi_Python.md&quot;&gt;tutorial&lt;/a&gt; for Raspberry or click on the image&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	&lt;a href=&quot;RaspberryPi_Python.md&quot;&gt;
		&lt;img src=&quot;pictures/miscellaneous/Python_logo.png&quot; width=&quot;400&quot; height=&quot;170&quot; /&gt;
	&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;open-an-account-at-aws-iot&quot;&gt;Open an account at AWS-IoT&lt;/h2&gt;
&lt;p&gt;(Soon ..)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-raspberry-pi-thing-in-aws-iot&quot;&gt;Create Raspberry Pi thing in AWS-IoT&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Sign in to the AWS Management Console, and then open the AWS IoT console at https://console.aws.amazon.com/iot&lt;/li&gt;
  &lt;li&gt;Go to the Monitor page. In the left navigation panel, choose Manage, and then choose Things.
&lt;img src=&quot;pictures/AWS/AWS_Console.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;You don’t have any things yet page. Choose Register a thing.
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Register.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;On the Creating AWS IoT things page, choose Create a single thing.
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Register_things.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Enter a name for the device, leave the default values for all the other fields, and then choose Next.
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Register_Raspberry.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Now generates the certificates.
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Certificates.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Download your public and private keys, certificate, and root certificate authority (CA) on your PC,
copy the content into a file and call it for example &lt;strong&gt;AmazonRootCA1.pem&lt;/strong&gt;
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Certificates_Download.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;For download your root certificate authority a new window is open for select a CA to download
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Certificates_Download_CA.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Don’t forget to save these files, you need them to establish the connection&lt;/li&gt;
  &lt;li&gt;Returns to the previous window and &lt;strong&gt;Activate&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Attach a policy&lt;/strong&gt;
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Certificates_Download.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Close this window, before you need to create and attach a new policy to the certificate
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Certificates_AttachPolicy.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Open the AWS IoT console again https://console.aws.amazon.com/iot&lt;/li&gt;
  &lt;li&gt;In the left navigation panel, choose &lt;strong&gt;Secure&lt;/strong&gt;, and then choose &lt;strong&gt;Policies&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Create a Policy&lt;/strong&gt;
&lt;img src=&quot;pictures/AWS/AWS_Console_Secure_Policies.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Enter a Name for the policy:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Action&lt;/strong&gt;        enter &lt;strong&gt;iot:&lt;/strong&gt;*&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Resource ARN&lt;/strong&gt;  enter &lt;strong&gt;*&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Effect&lt;/strong&gt;        choose &lt;strong&gt;Allow&lt;/strong&gt; 
Select Create. This policy allows your Raspberry Pi to publish messages to AWS IoT.
&lt;img src=&quot;pictures/AWS/AWS_Console_Secure_Policies_Create.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;In the AWS IoT console, choose &lt;strong&gt;Manage&lt;/strong&gt;, &lt;strong&gt;Things&lt;/strong&gt;. On the Things page, choose your Thing
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;On the thing’s &lt;strong&gt;Details&lt;/strong&gt; page, in the left navigation panel, choose &lt;strong&gt;Interact&lt;/strong&gt;.
Make a note of the REST API endpoint. You need it to connect to your device shadow.
It is the Broker Addres for MQTT connection.
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Interact.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Now select &lt;strong&gt;Security&lt;/strong&gt;, and choose the certificate that you created earlier. 
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Security.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;In Actions, choose Attach policy
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Security_Policy.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Select your new policy and then choose Attach 
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Security_Policy_Attach.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-is-mqtt&quot;&gt;What is MQTT&lt;/h2&gt;
&lt;p&gt;MQTT is a machine-to-machine (M2M)/”Internet of Things” connectivity protocol. 
It was designed as an extremely lightweight publish/subscribe messaging transport.&lt;/p&gt;

&lt;p&gt;The first concept is the publish and subscribe system. 
A device can publish a message on a topic, 
or it can be subscribed to a topic to receive messages&lt;/p&gt;

&lt;p&gt;AWS use this system to communicate with your devices&lt;/p&gt;

&lt;p&gt;If you access to AWS Management Console.In the left navigation panel, choose Manage, and then choose Things.
When choose a thing you can find out the different topic that you can subscribe/publish 
Select &lt;strong&gt;*Interact&lt;/strong&gt; to copy they.
Don’t forget to copy also the Rest API, you will need it as a broker address.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Interact_MQTT.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At the moment, you only need to know three topics:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Update to this thing shadow
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyRaspberryPi/shadow/update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Update to this thing shadow was accepted
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyRaspberryPi/shadow/update/accepted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Update to this thing shadow was rejected
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyRaspberryPi/shadow/update/rejected
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;test-your-certificates-with-mqttfx&quot;&gt;Test your Certificates with MQTT.fx&lt;/h2&gt;

&lt;p&gt;One of the best ways to make sure that certificates have been created correctly is to try connecting via a 
MQTT client with graphical interface.&lt;/p&gt;

&lt;p&gt;We recommend you download MQTT.fx from the following link https://mqttfx.jensd.de/&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open MQTT.fx and create a new connection.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;pictures/MQTT/MQTTFX_open.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Configure the broker as shown in the image below.
Remember to use the files you downloaded in the previous step. And configure the broker address associated to your device.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;pictures/MQTT/MQTTFX_Broker_Connect.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Now that you are connected to the broker, you need to subscribe to the topics to know the state of the shadow: 
accepted and rejected.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Every time a message is published in the topic to update the shadow, 
you can check in these topics if the message has been &lt;strong&gt;accepted&lt;/strong&gt; or &lt;strong&gt;rejected&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyRaspberryPi/shadow/update/accepted
$aws/things/MyRaspberryPi/shadow/update/rejected
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;pictures/MQTT/MQTTFX_Topic_Subscribe.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To update the shadow of your device, only in necessary to publish in the topic the following &lt;strong&gt;json file&lt;/strong&gt;, 
you can use the following link to validate it https://jsonlint.com/&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;state&quot;: {
        &quot;reported&quot; : { 
            &quot;temp&quot; : 22    
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This file will simulate the publishing of a device to make temperature measurements.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Shadow.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Of course, you need to choose the topics in which you can update your shadow.
Be sure to select the service quality level as QoS 0, amazon doesn’t allow a different police.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyRaspberryPi/shadow/update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;pictures/MQTT/MQTTFX_Topic_Publish.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;For delete the shadow’s value publish the next &lt;strong&gt;json file&lt;/strong&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
 &quot;state&quot;: null
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Play with this, sending different values until you understand how it works.
:thumbsup: Remember to check if your shipment has been accepted or rejected&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-to-comunicate-with-aws&quot;&gt;How to comunicate with AWS&lt;/h2&gt;

&lt;p&gt;As you know, when you register a new device in AWS. A topics are created by default.
These topics are the way of communication. In them you can send data and receive information.&lt;/p&gt;

&lt;p&gt;At the moment you only need to know two of them:&lt;/p&gt;

&lt;p&gt;topic Update&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyRaspberryPi/shadow/update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;this topic is where you publish the status of the device,
in this tutorial this information is composed by the values of the sensors as the current color of the LED display.&lt;/p&gt;

&lt;p&gt;topic Delta&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyRaspberryPi/shadow/update/delta
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is the channel that AWS uses to communicate the &lt;strong&gt;desired&lt;/strong&gt; changes to the device.
In this case we use the MQTT.fx to communicate these changes to AWS and to report the change to the device.&lt;/p&gt;

&lt;p&gt;All these changes are recorded in the &lt;strong&gt;shadow&lt;/strong&gt; of the device. 
To see the current status just access the AWS core as you saw in the previous section.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Shadow_Delta.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;desired&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;val&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Caution&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;colour&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reported&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;colour&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;val&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;temp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;colour&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;143&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;val&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;35.861732482910156&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;humidity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;colour&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;val&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;32.788143157958984&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;delta&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;val&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Caution&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As you can see in the previous file, there are three main indexes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;“desired”: Contains the desired state, sent from the MQTT.fx&lt;/li&gt;
  &lt;li&gt;“reported”: Contains the status information reported by the device&lt;/li&gt;
  &lt;li&gt;“delta”: contains the differences between the reported status and the desired status. 
This is the information that is published in the delta topic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-to-start-with-the-project&quot;&gt;How to Start with the project&lt;/h1&gt;

&lt;p&gt;Although we will explain it to you in detail how to execute it step by step, 
for this tutorial you need to be familiar with the following concepts&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Run a Python file on your raspberry (we recommend using the Desktop)&lt;/li&gt;
  &lt;li&gt;Copy the credentials files to Raspberry&lt;/li&gt;
  &lt;li&gt;Use MQTT.fx to post messages in a topic&lt;/li&gt;
  &lt;li&gt;Review the shadow from AWS core&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;execute-the-code-in-your-raspberry&quot;&gt;Execute the code in your Raspberry&lt;/h2&gt;

&lt;p&gt;At this point your raspberry won’t have any secrets for you. 
Nevertheless we will help you to continue so that you do not have any mishap.&lt;/p&gt;

&lt;p&gt;Create a folder on your Raspberry’s desktop called &lt;strong&gt;Python&lt;/strong&gt; and copy into it the following 
&lt;a href=&quot;../scripts/Python/Sense_HAT_AWS&quot;&gt;folder&lt;/a&gt; and copy in the &lt;strong&gt;CA&lt;/strong&gt; folder the device’s certification files&lt;/p&gt;

&lt;p&gt;Before, you need to edit the &lt;a href=&quot;../scripts/Python/Sense_HAT_AWS/config/Config_HAT.yaml&quot;&gt;script configuration file&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# selection to the AWS connection from the connection file&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Connection&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AWS&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#takes a measurement every x seconds&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;sample &lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;30&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#Sense HAT board configuration&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Sense_HAT&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;temperature&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ok&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# enables/disables the taking of measurements&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;temperature&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# text shown on the display&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;100&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;# value with maximum light intensity&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;# value with minimum light intensity&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;humidity&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ok&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;humidity&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;60&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;pressure&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;no&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pressure&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;acceleration&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;no&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;accel&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;60&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You also need to edit  &lt;a href=&quot;../scripts/Python/Sense_HAT_AWS/config/Config_Cloud.yaml&quot;&gt;script configuration file&lt;/a&gt;.
Pay attention to configure your device and select for the connection to AWS as well as the topics and messages.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AWS&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#select your broker and the thing&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;things&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;MyRaspberryPi&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;broker&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;xxxxxxxxxxxx-ats.iot.xx-xxxx-x.amazonaws.com&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;8883&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Certificate&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# identify the name of your files and the path&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;CA/&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ca&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;AmazonRootCA1.pem&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;certificate&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;xxxxxxxxxx-certificate.pem.crt&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;private_key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;xxxxxxxxxx-private.pem.key&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;topic&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# copy here the list of topics&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$aws/things/MyRaspberryPi/shadow/update&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;delta&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$aws/things/MyRaspberryPi/shadow/update/delta&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;accepted&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$aws/things/MyRaspberryPi/shadow/update/accepted&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;rejected&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$aws/things/MyRaspberryPi/shadow/update/rejected&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;:thumbsup: Depending on the version of Phyton’s interpreter may conflict when accessing a library&lt;/p&gt;

&lt;p&gt;install the libraries from your folder directory with the commands:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo pip install paho-mqtt -t ./
sudo pip install json -t ./
sudo pip install yaml -t ./
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;send-command-from-mqttfx&quot;&gt;Send Command from MQTT.fx&lt;/h2&gt;

&lt;p&gt;The first thing you need to know is that MQTT is a powerful tool that allows you to both communicate 
with AWS and monitor all communications between AWS and the device.
Use it whenever you have a problem or simply verify the content of a post.&lt;/p&gt;

&lt;p&gt;Connect withe the broker and configure it for publis in update and suscribe to delta.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyRaspberryPi/shadow/update
$aws/things/MyRaspberryPi/shadow/update/accepted
$aws/things/MyRaspberryPi/shadow/update/rejected
$aws/things/MyRaspberryPi/shadow/delta
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;if you subscribe to delta, you can review the content that AWS sends to your Raspberry. 
as a tip you can subscribe to the topics &lt;strong&gt;accepted&lt;/strong&gt; and &lt;strong&gt;rejected&lt;/strong&gt; for check if the communication 
is established or rejected by the broker.&lt;/p&gt;

&lt;p&gt;Publish the following json file to send a command to your Raspberry. 
When the broker receives it, it will update the shadow of the device. 
Generating a delta message that will be used by your raspberry to update his status. 
Showing the command and RGB color on the LED display.&lt;/p&gt;

&lt;p&gt;Play trying new messages and colors. This can be very useful!&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;state&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;desired&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;val&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Warning&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;colour&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;execute-your-project-and-enjoy&quot;&gt;Execute your project and enjoy!!&lt;/h2&gt;

&lt;h4 id=&quot;execute-the-script&quot;&gt;Execute the Script&lt;/h4&gt;

&lt;p&gt;Great! Now you can start running the script, with the following command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo python Rasp_HAT_AWS.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Another option is to configure your raspberry to run the script on power up&lt;/p&gt;

&lt;p&gt;Open the cron Table with de command &lt;code class=&quot;highlighter-rouge&quot;&gt;crontab -e&lt;/code&gt; and copy the next line in the file&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@reboot ( sleep 60  ; /usr/bin/python2.7 /home/pi/Desktop/Rasp_HAT_AWS.py &amp;gt; /home/pi/Desktop/Rasp_HAT_AWS.log )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;check-the-shadow-state&quot;&gt;Check the Shadow state&lt;/h4&gt;

&lt;p&gt;Before starting the execution you will see how your shadow is empty. 
With this script you can make temperature and humidity measurements on the board.
This updated the shadow with each shipment of the device, showing the same values as shown on the screen.&lt;/p&gt;

&lt;h4 id=&quot;watch-the-led-screen&quot;&gt;watch the LED screen&lt;/h4&gt;

&lt;p&gt;As you will be visualizing in your display, different messages are shown for the temperature and other 
sensor measurements varying the intensity of the luminosity according to the measured value, 
being able to modify even the message by the configuration file.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;Sense_HAT&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;temperature&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ok&lt;/span&gt;            
      &lt;span class=&quot;na&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;change-text-here&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# text shown on the display&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;100&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;# value with maximum light intensity&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;# value with minimum light intensity&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The display is able to show up to different states, temperature, humidity and a 
third state to visualize the received command.&lt;/p&gt;

&lt;h4 id=&quot;send-a-command&quot;&gt;Send a command&lt;/h4&gt;

&lt;p&gt;To send a command to the device you must use the MQTT as explained in the previous section 
through the json that we provide. you can change both the message and the background color 
using an RGB encoding (Red, Green, Blue).&lt;/p&gt;

&lt;p&gt;You can change this instruction as many times as needed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 19 Dec 2018 18:07:00 +0100</pubDate>
        <link>http://localhost:4000/raspberrypihat.html</link>
        <guid isPermaLink="true">http://localhost:4000/raspberrypihat.html</guid>
        
        
        <category>raspberry</category>
        
      </item>
    
      <item>
        <title>Kite Platform</title>
        <description>&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#this-is-kite-&quot;&gt;This is KITE!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#quick-view-to-kite-grafic-interface&quot;&gt;Quick view to Kite Grafic Interface&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#manage-your-sims&quot;&gt;Manage your SIMs&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#sim-inventory&quot;&gt;SIM inventory&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#sim-inventory-bottom-menu&quot;&gt;SIM inventory bottom menu&lt;/a&gt;
                &lt;ul&gt;
                  &lt;li&gt;&lt;a href=&quot;#assign-lines-to-subscription-group&quot;&gt;Assign lines to subscription group&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a href=&quot;#change-life-cycle-state&quot;&gt;Change life cycle state&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a href=&quot;#activate-data-traffic&quot;&gt;Activate data traffic&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#sim-details&quot;&gt;SIM details&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-kite-platform-api-&quot;&gt;What is Kite Platform API?&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#how-to-access-kite-platform-api&quot;&gt;How to access Kite Platform API?&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#access-step-by-step-using-the-curl-command&quot;&gt;Access step by step using the CURL command&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Kr5aICVJxSA&quot;&gt;&lt;img src=&quot;pictures/Kite/Kite.png&quot; alt=&quot;IMAGE ALT TEXT HERE&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;this-is-kite&quot;&gt;This is KITE!&lt;/h1&gt;
&lt;p&gt;Kite Platform improves productivity globally in the M2M sphere, providing tools to
manage your devices connectivity.
Among these tools are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;SIM card management, display and management of its parameters through the
inventory, activation and other administrative changes.&lt;/li&gt;
  &lt;li&gt;Line assignment or migration to different commercial plans&lt;/li&gt;
  &lt;li&gt;Pre-bill invoices inquiries&lt;/li&gt;
  &lt;li&gt;Users and organizations management&lt;/li&gt;
  &lt;li&gt;Alarms and reports management
Among the tools provided by Kite Platform, are a few APIs used for the integration of
the product functionalities in the Customer’s systems. Those APIs description is
available in the Help menu in the web portal.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;quick-view-to-kite-grafic-interface&quot;&gt;Quick view to Kite Grafic Interface&lt;/h1&gt;

&lt;p&gt;The grafic interface of Kite is organized as shown in the following figure.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 Configuration menu&lt;/li&gt;
  &lt;li&gt;2 Main menu&lt;/li&gt;
  &lt;li&gt;3 Work area&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;manage-your-sims&quot;&gt;Manage your SIMs&lt;/h2&gt;

&lt;h3 id=&quot;sim-inventory&quot;&gt;SIM inventory&lt;/h3&gt;

&lt;p&gt;you can use the search engine of the platform to locate a SIM by copying its ICC number in the bar&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_find.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;or you can access the SIM inventory, where you can locate and manage all your cards&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To see the details of each of the SIM, double click on each of them to view SIM details,
or simply select one or several to activate the bottom menu&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_select.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the image above you can check the current status of your SIMs within their life cycle.&lt;/p&gt;

&lt;p&gt;Some of them may be deactivated, and you may need to change their status. In the next step we will show you how to check that a SIM is operational.&lt;/p&gt;

&lt;h4 id=&quot;sim-inventory-bottom-menu&quot;&gt;SIM inventory bottom menu&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_select_1Assign.png&quot; alt=&quot;pic&quot; /&gt;
&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_select_2Change.png&quot; alt=&quot;pic&quot; /&gt;
&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_select_3Activate.png&quot; alt=&quot;pic&quot; /&gt;
&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_select_4Desactivate.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;assign-lines-to-subscription-group&quot;&gt;Assign lines to subscription group&lt;/h5&gt;
&lt;p&gt;First of all, your SIM must be assigned to a subscription group. 
If this is not the case you should contact your local SIM distributor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_select_1Assign_subscription_group.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;change-life-cycle-state&quot;&gt;Change life cycle state&lt;/h5&gt;
&lt;p&gt;In order for a SIM to be operational, it must be activated.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_select_2Change_life_cycle.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_LifeCycle.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Inactive new, initial state of any SIM card. The card will remain in this state until you 
assign a Subscription Group to it (including a commercial plan).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Test, optional and available test for once the SIM card is assigned to a
Subscriptions group that takes into account that state in its commercial plan.
This state enables a limited traffic in order to prove the SIM card is functioning
correctly.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Activation ready, previous state to Activated and state the SIM card changes to
once the time or the available traffic is consumed in the Test state.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pending activation, state similar to the previous one, but in this one the change
to the Activated state is done manually from Inventory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Activated, in this state the SIM card is fully operating, in condition of regular
traffic, and fees and service restrictions set up in the Subscriptions group through
the assigned commercial plan apply to it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Deactivated, state a SIM card can change to, typically when there is an anomaly
with the card. In this state, the SIM card does not have traffic but its permanence
can entail an associated fee. From this state, the card can be activated again
manually.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Suspended, state a SIM card can be changed to, typically in cases of fraud or
unpaid, from any state it is in as long as it is not Retired. Leaving this state implies
returning to the state the SIM card was in before or to be Retired. Only the Service
Provider is authorized to perform manual transitions to and from this state.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Retired, this shall always be the last state a SIM card shall be in before it is
retired. This state can only be reached if the card is suspended. Once in this state,
there is no going back to the previously defined states.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;activate-data-traffic&quot;&gt;Activate data traffic&lt;/h5&gt;
&lt;p&gt;And lastly you must make sure that the SIM has the traffic activated.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_select_3Activate_data_traffic.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sim-details&quot;&gt;SIM details&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_manager.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;sim-identification&quot;&gt;SIM identification&lt;/h5&gt;
&lt;p&gt;When the section opens, the detailed information on the SIM card is accessed. 
Some of these fields are editable with the &lt;strong&gt;Edi&lt;/strong&gt;t button on the top right corner.&lt;/p&gt;

&lt;p&gt;Here you can add both an identifying name to your SIM &lt;strong&gt;Alias&lt;/strong&gt; 
and add and manage the content of your &lt;strong&gt;custom fields&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_Inventory_01_SIM_identification.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;life-cycle-state&quot;&gt;Life cycle state&lt;/h5&gt;
&lt;p&gt;It groups information related to the status changes in the life cycle of the SIM card.
It displays only the value of the current state.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_Inventory_02_Life_cycle_state.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;presence&quot;&gt;Presence&lt;/h5&gt;
&lt;p&gt;It displays SIM information related to the connectivity. 
If you do not know the APN through which your SIM has to be connected, 
you can check it in this section.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_Inventory_03_Presence.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;traffic-consumption-control&quot;&gt;Traffic consumption control&lt;/h5&gt;
&lt;p&gt;Shows detailed or summary information on the SMS messages, data and traffic or
voice consumption of the SIM card during the current billing period.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_Inventory_04_Traffic_consumption_control.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;monthly-expense-control&quot;&gt;Monthly expense control&lt;/h5&gt;
&lt;p&gt;Shows detailed or summary information on data, SMS messages and voice
expense incurred by the SIM card during the last months.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_Inventory_05_Monthly_expense_control.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;basic-services-and-supplementary-services&quot;&gt;Basic services and Supplementary services&lt;/h5&gt;
&lt;p&gt;Includes data, SMS and voice traffic services for SIM M2M cards and. 
indicates whether they are activated&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_Inventory_06_Basic_services_enabled.png&quot; alt=&quot;pic&quot; /&gt;
&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_Inventory_07_Supplementary_services.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;location&quot;&gt;Location&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;pictures/Kite/Kite_interface_SIM_Inventory_08_Location.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;what-is-kite-platform-api&quot;&gt;What is Kite Platform API?&lt;/h1&gt;
&lt;p&gt;The Kite Platform offers you an API that allows you to integrate it with all your systems. 
It allows you to access all your data your data offering you various functionalities&lt;/p&gt;

&lt;h2 id=&quot;how-to-access-kite-platform-api&quot;&gt;How to access Kite Platform API?&lt;/h2&gt;

&lt;p&gt;The API is available on the Internet, in the address m2m-api.telefonica.com,
through port 8010. Therefore, the services this API exhibits can be used from any
system having access to the Internet.&lt;/p&gt;

&lt;p&gt;:heavy_exclamation_mark: 
All your API requests must use the HTTPS protocol. This guarantees the confidentiality of your data.&lt;/p&gt;

&lt;p&gt;To ensure your confidentiality, you will use the SSL (Secure Sockets Layer) protocol. 
This protocol allows you to establish a bidirectional communication between your systems and Kite.&lt;/p&gt;

&lt;p&gt;This request is made through the use of a certificate and a private key for encryption,
these will be issued on demand and will be exclusive to you. Take good care of it! 
Remember that it is the gateway to all your SIM data.&lt;/p&gt;

&lt;h3 id=&quot;access-step-by-step-using-the-curl-command&quot;&gt;Access step by step using the CURL command&lt;/h3&gt;

&lt;p&gt;The Curl command is used to transfer files from a server, it supports various protocols such as HTTP, FTP …&lt;/p&gt;

&lt;p&gt;If you have requested access to the Kite Platform API, the support team will have provided you with an encrypted file.pfx
containing both the key and the certificate for the SSL context of your connection. It will also provide you 
a password so that you can extract them.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open a Linux Terminal and install openssl, if you do not have it installed.
This command allows you to decrypt your file
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install openssl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Extract the public key from Customer certificate &lt;strong&gt;your_customer_certificate.pfx&lt;/strong&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl pkcs12 -in your_customer_certificate.pfx -clcerts -nokeys -out your_customer_certificate.cer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;You will need the password provided by the Kite Platform Support Team&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Extract the private key from the Customer certificate
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl pkcs12 -in your_customer_certificate.pfx -nocerts -nodes -out your_customer_certificate.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;also you will need your password here.
:heavy_exclamation_mark:  Remember, keep these new files in a safe place!!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;There is an example about the access to the Commercial Plans API REST using the CURL command:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo curl --cert ./your_customer_certificate.cer --key ./your_customer_certificate.key https://m2m-api.telefonica.com:8010/services/REST/GlobalM2M/ServicePacks/v2/r12/servicePack
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 19 Dec 2018 18:07:00 +0100</pubDate>
        <link>http://localhost:4000/movistarkiteplatform.html</link>
        <guid isPermaLink="true">http://localhost:4000/movistarkiteplatform.html</guid>
        
        
        <category>kite</category>
        
      </item>
    
      <item>
        <title>Arduino Starter Kit</title>
        <description>&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#arduino-starterkit-for-iot-activation&quot;&gt;Arduino StarterKit for IoT-Activation&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#what-is-arduino-&quot;&gt;What is Arduino?&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#arduino-mkr-nb-1500&quot;&gt;Arduino MKR NB-1500&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#getting-started-with-your-arduino&quot;&gt;Getting started with your Arduino&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#configure-arduino-ide&quot;&gt;Arduino IDE&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#use-arduino-web-editor&quot;&gt;Arduino web editor&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hello-world-create-your-first-arduino-program&quot;&gt;Hello World: Create your first Arduino program&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#nb-iot-and-lte-m-setup-and-connection&quot;&gt;NB-IoT and LTE-M: Setup and Connection&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#connection&quot;&gt;Connection&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;arduino-starterkit-for-iot-activation&quot;&gt;Arduino StarterKit for IoT-Activation&lt;/h1&gt;

&lt;h2 id=&quot;what-is-arduino&quot;&gt;What is Arduino?&lt;/h2&gt;
&lt;p&gt;Arduino is an open-source electronics platform based on easy-to-use hardware. 
The Arduino software is easy for beginners an flexible enough for advanced users&lt;/p&gt;

&lt;h3 id=&quot;arduino-mkr-nb-1500&quot;&gt;Arduino MKR NB-1500&lt;/h3&gt;
&lt;p&gt;The MKR branch of the Arduino board family is dedicated to the IoT so it tries to provide 
solutions for devices in remote locations without a high speed Internet connection, or in situations in which power isn’t available.&lt;/p&gt;

&lt;p&gt;The Arduino MKR NB 1500 adds the wireless connectivity  Narrow Band IoT and LTE CAT M1 to the Arduino platform. 
It is a learning and development board which contains the ATMEL SAMD21 micro controller, 
designed to integrate the core’s low power-consumption and high performance with the Arduino’s ease-of-use. 
The MKR NB 1500 brings the Arduino Zero functionalities in the smaller form factor.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;Arduino_NB1500&quot; src=&quot;pictures/Arduino/Arduino_NB1500.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h5 id=&quot;led-on&quot;&gt;LED ON&lt;/h5&gt;
&lt;p&gt;This LED is connected to the 5V input from either USB or VIN&lt;/p&gt;

&lt;h5 id=&quot;reset-button&quot;&gt;Reset button&lt;/h5&gt;
&lt;p&gt;This button allows you to reset the program contained on the board so that it runs again from the init.&lt;/p&gt;

&lt;h5 id=&quot;onboard-led&quot;&gt;Onboard LED&lt;/h5&gt;
&lt;p&gt;The onboard LED is connected to pin D6&lt;/p&gt;

&lt;h5 id=&quot;battery-connector&quot;&gt;Battery connector&lt;/h5&gt;
&lt;p&gt;If you want to connect a battery to your board be sure to search one with female 2 pin JST PHR2 Type connector.&lt;/p&gt;

&lt;h5 id=&quot;led-charge&quot;&gt;LED charge&lt;/h5&gt;
&lt;p&gt;The indicator lights when the board receives 5V from VIN or USB, and the chip starts charging the Li-Po battery connected to the JST connector.&lt;/p&gt;

&lt;h5 id=&quot;antenna-connector&quot;&gt;Antenna connector&lt;/h5&gt;
&lt;p&gt;Allows you to connect an external antenna to receive and send the RF signal&lt;/p&gt;

&lt;h3 id=&quot;arduino-antenna-gsm&quot;&gt;Arduino Antenna GSM&lt;/h3&gt;

&lt;p&gt;GSM antennas designed for mobile communications compatible with the Arduino board.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;Arduino_NB1500&quot; src=&quot;pictures/Arduino/Arduino_antenna_GSM.jpg&quot; width=&quot;300&quot; height=&quot;250&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;power-supply&quot;&gt;Power Supply&lt;/h3&gt;
&lt;p&gt;An electrical device that supplies electric power to your Arduino board&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;Arduino_NB1500&quot; src=&quot;pictures/Arduino/Arduino_power_supply.jpg&quot; width=&quot;300&quot; height=&quot;250&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;telefonica-sim-card&quot;&gt;Telefonica SIM Card&lt;/h3&gt;
&lt;p&gt;This little one makes you enjoy all the advantages of the Telefonica network. 
Take care of her, she will be your partner into the IoT world.&lt;/p&gt;

&lt;p&gt;:heavy_exclamation_mark:  Note that to insert it into the Arduino board you will need the microSIM format&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;Telefonica_SIM&quot; src=&quot;pictures/miscellaneous/Telefonica_SIM.png&quot; width=&quot;300&quot; height=&quot;210&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;getting-started-with-your-arduino&quot;&gt;Getting started with your Arduino&lt;/h1&gt;

&lt;h2 id=&quot;configure-arduino-ide&quot;&gt;Configure Arduino IDE&lt;/h2&gt;

&lt;p&gt;Arduino platform provides a Integrated Development Environment (IDE). 
The first step to get started with the kit is to download the Arduino IDE from their web https://www.arduino.cc/en/Main/Software&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_IDE.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This environment provides not only an interface to develop your scripts. 
It is also your tool to download your files to the device.&lt;/p&gt;

&lt;p&gt;This development environment provides support for the different Arduino boards.
For this reason, before loading your software, you must select your board type.
If you want to program your MKR NB 1500 you need to install the Arduino Desktop IDE and add the Atmel SAMD Core to it. 
This simple procedure is done selecting &lt;strong&gt;Tools&lt;/strong&gt; menu, then &lt;strong&gt;Boards&lt;/strong&gt; and last &lt;strong&gt;Boards Manager&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_IDE_boards_manager.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here you can search MKR NB 1500 to find the core. Click on its box and click on the install button. 
On the bottom bar of the window you can follow the download and install procedure, including the installation of the proper driver, needed by the operating system to use the board&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_IDE_boards_manager_NB.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that the SAMD Core is installed. All you have to do is select the corresponding Board.
Select the entry in the &lt;strong&gt;Tools &amp;gt; Board menu&lt;/strong&gt; that corresponds to &lt;strong&gt;Arduino MKR NB-1500&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_IDE_board.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first time you connect your board, your computer will recognize it as a new device. 
However, you must configure the environment to indicate the port to which it has been connected.&lt;/p&gt;

&lt;p&gt;Connect your board to your computer you need a micro USB cable, and wait a moment until your computer recognizes it.
Select the serial device port from the &lt;strong&gt;Tools &amp;gt; Serial Port menu&lt;/strong&gt;. 
This is likely to be &lt;strong&gt;COMx&lt;/strong&gt; (COM1 and COM2 are usually reserved). 
if you can’t find the port used, you should disconnect your board and re-open the menu.
The entry that disappears should be the Arduino board. Reconnect the board and select that serial port.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_IDE_com.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If this is your first time using the board, it is likely that when copiling you will not find some libraries.&lt;/p&gt;

&lt;p&gt;To avoid this error when using the connection libraries, you can import them by following these steps:&lt;/p&gt;

&lt;p&gt;Go to the menu &lt;strong&gt;sketch&lt;/strong&gt; and select &lt;strong&gt;Include library&lt;/strong&gt; to enter the &lt;strong&gt;Manage libraries…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_IDE_library_manager.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Search by board name &lt;strong&gt;MKR NB&lt;/strong&gt; to find the necessary libraries.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_IDE_library_manager_MKRNB.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now everything is ready to run your first script&lt;/p&gt;

&lt;h2 id=&quot;use-arduino-web-editor&quot;&gt;Use Arduino web editor&lt;/h2&gt;

&lt;p&gt;Another alternative for development on Arduino boards without download anything, it is its new web editor 
https://create.arduino.cc/editor allowing the same development as on the desktop editor.&lt;/p&gt;

&lt;p&gt;If you want to use this online tool, you only need to register on the Arduino website and create a user account.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_WEB_login.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This editor shows a friendly interface with the same functionalities. As you can see in the following screenshot&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_WEB_editor.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The web editor is ready to use, you just have to select your board and make sure you have an internet connection.
Because it will not be necessary to manage the libraries and the boards.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_WEB_editor_board.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this case, you should try to find the model of your board, MKR NB 1500&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_WEB_editor_board_NB.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we mentioned, you will not need to manage the installed libraries, because the editor has access to the Arduino repository. 
However, it has the same tools to locate the available libraries.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_WEB_editor_library_manager_MKRNB.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To download the code on your board, you must follow the same process as with the IDE, 
however being an online tool allows new options such as sharing the sketch using a url&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_WEB_editor_code_menu_upload.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;hello-world-create-your-first-arduino-program&quot;&gt;Hello World: Create your first Arduino program&lt;/h2&gt;

&lt;p&gt;The Arduino programming language is based on Wiring, creating a simplified version of the C++ language.&lt;/p&gt;

&lt;p&gt;here you can see the typical structure of a program. This structure is created automatically when you open a new file&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Put your setup code here:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// This part of the software will run only once when the program is started&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Use this code to initialize your device&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Put your main code here:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// This part of the code is repeated constantly&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To run your first program, copy the following code into the Arduino IDE or the web editor&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// put your setup code here, to run once:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// put your main code here, to run repeatedly:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; Hello World &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Great, now you should be able to see something like that.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_IDE_code.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, We are gonna run the last test. Compile and upload your code to the board.
But you’re lucky, the IDE will do  this for you. If an error occurs, It will appear at the console below&lt;/p&gt;

&lt;p&gt;To do this press the &lt;strong&gt;Upload&lt;/strong&gt; button that you will find below the menu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_IDE_code_menu_upload.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If everything goes well, your software is already running on the board, and will restart every time you turn it on.&lt;/p&gt;

&lt;p&gt;But what the hell, your Arduino doesn’t have a screen where display text!
This is not a problem, as you have previously set up a serial connection to send the message.
So your board is sending this message through the usb that connects to your pc.&lt;/p&gt;

&lt;p&gt;Effectively! again your Arduino IDE does this for you.
You can open a terminal to display all messages sent from the Arduino via serial communication.
Click on the lens icon to open it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_IDE_code_menu_serial_console.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now you can see that the message &lt;strong&gt;“Hello world”&lt;/strong&gt; is sent every 2 seconds.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_IDE_serial_console.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;assembling-antenna-and-microsim&quot;&gt;Assembling: Antenna and microSIM&lt;/h2&gt;

&lt;p&gt;The Arduino board has a very simple assembly, but make sure you’ve done it correctly or 
you won’t be able to make the connection.&lt;/p&gt;

&lt;p&gt;The SIM card must be in microSIM format, and must be fully inserted, with the metal face of the 
connector towards the inside of the board.&lt;/p&gt;

&lt;p&gt;To plug in the GSM antenna, carefully press the connector and lock it in parallel.&lt;/p&gt;

&lt;h2 id=&quot;nb-iot-and-lte-m-setup-and-connection&quot;&gt;NB-IoT and LTE-M: Setup and Connection&lt;/h2&gt;

&lt;p&gt;Now that you’ve run your first arduino program. You need to learn how to set up the network connection. 
The Arduino board is equipped with a SARA-R410M modem.
It is a Ultra-compact LTE Cat M1 / NB1 and GPRS modules with multi-regional coverage.&lt;/p&gt;

&lt;p&gt;Not only allows you to select the type of network you want to connect to, 
but also to prepare the appropriate configuration to connect to the Movistar network in your country.&lt;/p&gt;

&lt;p&gt;Arduino will provide you with different examples and tools to perform the initial configuration of the SARA module. 
But we’ll help you by going one step further. You’ll learn how to create your own configuration code. 
This way you will be able to run it at the start of each new script.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/Arduino/Arduino_IDE_examples_mkrnb_tool.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;:thumbsup: make sure that you correctly configure each device before each program. since the module will maintain 
the previous configuration in the case of not modifying it.&lt;/p&gt;

&lt;h3 id=&quot;setup&quot;&gt;Setup&lt;/h3&gt;

&lt;p&gt;Before preparing the script, you should know that the communication between the board and the module is done 
by means of a series of instructions known as AT commands.&lt;/p&gt;

&lt;p&gt;These AT commands allow you, among other things, to select if you connect to NB or LTE, as well as to configure
the band to which you must connect. This varies according to your territorial zone.&lt;/p&gt;

&lt;p&gt;Here you will only learn the basic commands to make a correct connection with the Movistar network.&lt;/p&gt;

&lt;p&gt;Here you can see an example of a &lt;a href=&quot;..\scripts\Arduino\Connection\setup_SaraR410M_movistar.h&quot;&gt;setup file&lt;/a&gt;, 
but we’ll show you what those commands mean and how to select the appropriate parameters.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AT+CFUN=15&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitForResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;noop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitForResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup_SaraR410M_movistar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;noop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//// Disconnecting from network&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//MODEM.sendf(&quot;AT+COPS=2&quot;); &lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AT+CFUN=0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitForResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   

  &lt;span class=&quot;c1&quot;&gt;//// Select Radio Access Technology (RAT)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//// uncomment only 1 of the 4 options&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;//// LTE only&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//MODEM.sendf(&quot;AT+URAT=7&quot;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//// NB-IoT only&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//MODEM.sendf(&quot;AT+URAT=8&quot;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//// LTE-M preferred, NB-IoT as failover&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//MODEM.sendf(&quot;AT+URAT=7,8&quot;); &lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//// NB-IoT preferred, LTE-M as failover&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AT+URAT=8,7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;////wait response&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitForResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;//// Select Band bitmask &lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//// configure both masks if necessary (LTE-M and NB-IoT )&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;//// configure bitmask for LTE-M (Band-20)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AT+UBANDMASK=0,524288&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitForResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//// configure bitmask for NB-IoT (Band-20)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AT+UBANDMASK=1,524288&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitForResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  

  &lt;span class=&quot;c1&quot;&gt;////configure the default values for Mobile Network Operators&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AT+UMNOPROF=0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitForResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;////configure the APN if you know it in (APN_NAME)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//MODEM.sendf(&quot;AT+CGDCONT=1,\&quot;IP\&quot;,\&quot;APN_NAME\&quot;&quot;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//MODEM.waitForResponse(2000, &amp;amp;response);  &lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;////// Configures the Extended Discontinuous Reception (eDRX).   &lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AT+CEDRXS=0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//// in LTE-M&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// MODEM.sendf(&quot;AT+CEDRXS=2,4\&quot;0010\&quot;&quot;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//// or in NB-Iot&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// MODEM.sendf(&quot;AT+CEDRXS=2,5\&quot;0010\&quot;&quot;);    &lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitForResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;////// Configures the Power Saving Mode (PSM).   &lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AT+CPSMS=0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;//MODEM.sendf(&quot;AT+CPSMS=1,\&quot;00100001\&quot;,\&quot;00100101\&quot;&quot;);  &lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitForResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    
    
  &lt;span class=&quot;c1&quot;&gt;//// Applying changes and saving configuration&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now a short tutorial to configure the parameters&lt;/p&gt;

&lt;h5 id=&quot;select-radio-access-technology-rat&quot;&gt;Select Radio Access Technology (RAT)&lt;/h5&gt;

&lt;p&gt;RAT is the underlying physical connection method for a radio based communication network.&lt;/p&gt;

&lt;p&gt;The SARA module of your Arduino allows you to select different technologies such as GSM, LTE/NB …
Even select several technologies in case the primary technology is not available.&lt;/p&gt;

&lt;p&gt;Although for our purpose we will focus on the lowest consumption technologies such as LTE and NB, 
as they are specific technologies for use in IoT.&lt;/p&gt;

&lt;p&gt;This configuration will be done using the AT command &lt;code class=&quot;highlighter-rouge&quot;&gt;AT+URAT=&amp;lt;value&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;According to the assigned value, it will allow you to choose between the following cases:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;LTE only                              &lt;code class=&quot;highlighter-rouge&quot;&gt;AT+URAT=7&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;NB-IoT only                           &lt;code class=&quot;highlighter-rouge&quot;&gt;AT+URAT=8&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;LTE-M preferred, NB-IoT as failover   &lt;code class=&quot;highlighter-rouge&quot;&gt;AT+URAT=7,8&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;NB-IoT preferred, LTE-M as failover   &lt;code class=&quot;highlighter-rouge&quot;&gt;AT+URAT=8,7&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As indicated, the value 7 corresponds to LTE and 8 to NB&lt;/p&gt;

&lt;h5 id=&quot;select-band&quot;&gt;Select Band&lt;/h5&gt;

&lt;p&gt;The module supports a series of 4G LTE bands for the different radio access technologies (RAT).&lt;/p&gt;

&lt;p&gt;This configuration is done through a bitmask. So you will have to configure both NB and LTE bitmask.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;for configure LTE-M bitmask use the AT command &lt;code class=&quot;highlighter-rouge&quot;&gt;AT+UBANDMASK=0,&amp;lt;Bands&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;for configure LTE-M bitmask use the AT command &lt;code class=&quot;highlighter-rouge&quot;&gt;AT+UBANDMASK=1,&amp;lt;Bands&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But how do you calculate the mask for each band? this is very simple.&lt;/p&gt;

&lt;p&gt;look at it with this examples.&lt;/p&gt;

&lt;p&gt;for example, if you want to activate the European band (B20), you will make sure that the mask has bit 20 activated.&lt;/p&gt;

&lt;p&gt;It is only necessary to translate the number from binary to decimal&lt;/p&gt;

&lt;p&gt;just do the following calculation&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BX   -&amp;gt;  2^( X-1)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;examples:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;B3   -&amp;gt;  2^( 3-1) = 4 
B4   -&amp;gt;  2^( 4-1) = 8
B20  -&amp;gt;  2^(20-1) = 524288
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and so on ….&lt;/p&gt;

&lt;p&gt;Is also very easy if you need to activate multiple bands. Sum them all!&lt;/p&gt;

&lt;p&gt;for bands 3 and 4 simultaneously:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;B3 &amp;amp; B4  -&amp;gt;  2^( 4-1) + 2^( 3-1) = 12&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But if you’d like to consider it an explanation. You can always use a calculator!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;configure-the-consumption&quot;&gt;Configure the consumption:&lt;/h5&gt;

&lt;p&gt;One of the main goals from de device pespective is the battery energy consumption.&lt;/p&gt;

&lt;h6 id=&quot;extended-discontinuous-reception&quot;&gt;Extended Discontinuous Reception&lt;/h6&gt;

&lt;p&gt;try with a complete example discontinuous reception (eDRX) is a way that mobile communication are used to save the battery of the mobile device.&lt;/p&gt;

&lt;p&gt;The mobile device and the network negotiate in each data transfer. 
from time to time the device turns off goes into a low power state.&lt;/p&gt;

&lt;p&gt;You can activate and configure this option using one of the AT commands &lt;code class=&quot;highlighter-rouge&quot;&gt;AT+CEDRXS=&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Although the network has the final word, it is possible to configure the modem to select eDRX times.&lt;/p&gt;

&lt;h6 id=&quot;power-saving-mode&quot;&gt;Power Saving Mode&lt;/h6&gt;

&lt;p&gt;Power save mode (PSM) means that the device notifies the network that it is going to be inactive, 
so it will turn the radio interface after a while.&lt;/p&gt;

&lt;p&gt;Using AT commands, you can activate this mode to determine the schedule times. &lt;code class=&quot;highlighter-rouge&quot;&gt;AT+CPSMS=&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;these consumption modes are really important as they can improve the battery life in IoT devices.&lt;/p&gt;

&lt;p&gt;Now that you know a little more about energy modes. You’ll see how these are integrated into the communication proccess.
Out of the box, the device will perform an Attachment stage to connect to the mobile network. This step will be performed 
whenever the device is reconnected to the network, resulting in a process with a very high power consumption.&lt;/p&gt;

&lt;p&gt;Once the Attachment is done and the data is sent, the device will keep waiting for a few seconds depending on the connection 
technology  (NB-IoT or LTE-M) go through the IDLE stage.
During the IDLE stage, the device will maintain the connection to the network. 
This connection is maintained by swaping short periods of data exchange with the network with periods of workless. 
If you review the consumption graph, you can see how during the IDLE stage a series of square pulses appears.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/schematics/LTE_transmision.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But how do these savings modes fit into the cycle? As expected, both modes are involved in the IDLE stage.
The device will remain in this stage for most of the cycle.&lt;/p&gt;

&lt;p&gt;If you activate the eDRX, a new cycle will be established during the IDLE stage, which will be repeated continuously, 
maintaining a resting stage during part of the cycle. With the AT command you can select both the total time of the new cycle 
and the time during which the communication takes place.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/schematics/LTE_transmision_eDRX.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When the PSM is activated, the device will perform the IDLE stage and then turn off the antenna. 
But as we mentioned earlier, every time we connect to the network, Attachment will happen again. 
Well! the advantage of the PSM is that when you configured it, the device warns the network of the time it remains deactivated, 
so the network will keep the configuration of the device even if the antenna is off. 
At the end, the device will alert the network again of its connection but without the need to 
perform Attachment again, which saves time and energy.&lt;/p&gt;

&lt;p&gt;Using the AT command it is possible to determine the total cycle time, 
which contains both the IDLE connection time and the workless time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/schematics/LTE_transmision_PSM.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Both saving modes can be combined and used together. This allows you to reduce energy consumption in cases 
where you do not need continuous communication.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/schematics/LTE_transmision_eDRX_PSM.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;how-to-set-the-timers&quot;&gt;How to set the timers:&lt;/h5&gt;
&lt;p&gt;Although the configuration of the modes is a negotiation with the network, 
where the network has the final decision, using the AT command you can activate/deactivate both modes 
as well as configure their cycle times.&lt;/p&gt;

&lt;h6 id=&quot;--edrx&quot;&gt;- eDRX&lt;/h6&gt;

&lt;p&gt;You can disable it with command &lt;code class=&quot;highlighter-rouge&quot;&gt;AT+CEDRXS=0,4&lt;/code&gt; in LTE-M or with command &lt;code class=&quot;highlighter-rouge&quot;&gt;AT+CEDRXS=0,5&lt;/code&gt; for NB-IoT.&lt;/p&gt;

&lt;p&gt;Effectively the code 4 or 5 will serve you to identify the type of connection you want to configure !!&lt;/p&gt;

&lt;p&gt;To activate it you must do exactly the same thing, but changing the 0 for a 2, 
although this time you will have to add a code of 4 digits to configure the cycle time.&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Activate eDRX: 20,48s in LTE-M&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AT+CEDRXS=2,4&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0010&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Activate eDRX: 20,48s in NB-IoT&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MODEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AT+CEDRXS=2,5&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0010&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Activate eDRX: 40,96s in LTE-M&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CEDRXS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0011&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Activate eDRX: 40,96s in NB-IoT&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CEDRXS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0011&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;you can check the rest of the values in the table&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/schematics/LTE_table_value_DRX.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;h6 id=&quot;--psm&quot;&gt;- PSM&lt;/h6&gt;

&lt;p&gt;Disable with command &lt;code class=&quot;highlighter-rouge&quot;&gt;AT+CPSMS=0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To activate the PSM, you only have to select the value to one and configure 
the time of the cicle (IDLE + PSM) and time of conection (IDLE) copying the codes that there are in the table.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-AT&quot;&gt;** Activate PSM: 1h of cycle / 5m resting&quot;
AT+CEDRXS=1,&quot;00100001&quot;,&quot;00100101&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To complete the code of each timer, select the first 3 digits of the PSM table and complete them 
with the last 5 digits with are the multiplying factor in binary code&lt;/p&gt;

&lt;p&gt;follow the example below&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//IDLE + PSM:&lt;/span&gt;
&lt;span class=&quot;mo&quot;&gt;011&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00001&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;
&lt;span class=&quot;mo&quot;&gt;011&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00010&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00010&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//IDLE:&lt;/span&gt;
&lt;span class=&quot;mo&quot;&gt;000&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00001&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;
&lt;span class=&quot;mo&quot;&gt;001&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00010&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;try with a complete example&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-AT&quot;&gt;** Activate PSM: 1h of cycle / 5m resting&quot;
//IDLE + PSM:
001 00001 -&amp;gt; 1 hour * 1 = 1 hour
//IDLE:
001 00101 -&amp;gt; 1 min  * 5 = 5 min
//PSM
1hour - 5 min = 45 min

AT+CEDRXS=1,&quot;00100001&quot;,&quot;00100101&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if you need, you can use a binary online calculator: https://www.rapidtables.com/convert/number/decimal-to-binary.html&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/schematics/LTE_table_value_PSM.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;connection&quot;&gt;Connection&lt;/h3&gt;

&lt;p&gt;Now that you know how to configure your modem to make a correct connection.&lt;/p&gt;

&lt;p&gt;You will be able to execute the following &lt;a href=&quot;../scripts/Arduino/Connection&quot;&gt;code&lt;/a&gt; 
with which to connect to the Movistar network. Let the games begin!&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{;}&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;START setup&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//setup modem Sara R410M&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;setup_SaraR410M_movistar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Testing Modem:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;IMEI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_modem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Modem's IMEI: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IMEI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Try Connecting....&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbAccess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PINNUMBER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NB_READY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gprs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attachGPRS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPRS_READY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;connected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Connected&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Not connected&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;END setup&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this test software, you will be able to check the connection of your SIM card and check
the access to the NB-IoT network.&lt;/p&gt;

&lt;p&gt;Open the Arduino IDE Serial Monitor to check by messages 
if the connection to the module and the network is correct&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;START setup
Testing Modem:
- Starting modem test...
- Modem is connected
- Checking IMEI...
- Modem is functioning properly
- Resetting modem...
- Modem is functioning properly
Modem's IMEI: xxxxxxxxxxxxxxx
NB-IoT networks scanner
Scanning Networks:
1
Try Connecting....
Connected
END setup
Connected
Connected
Connected
Connected
Connected
[...]
 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Dec 2018 18:07:00 +0100</pubDate>
        <link>http://localhost:4000/arduinostarterkit.html</link>
        <guid isPermaLink="true">http://localhost:4000/arduinostarterkit.html</guid>
        
        
        <category>arduino</category>
        
      </item>
    
      <item>
        <title>IoT Basics</title>
        <description>&lt;p align=&quot;center&quot;&gt;
      &lt;img title=&quot;Telefonica&quot; src=&quot;pictures/miscellaneous/Telefonica_logo.png&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#welcome-to-iot-activation-of-telefonica&quot;&gt;Welcome to IoT-Activation of Telefonica&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#what-can-you-find-in-the-raspberry-starter-kit&quot;&gt;Raspberry Starter-kit&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#and-in-the-arduino-kit&quot;&gt;Arduino  Starter-kit&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#before-starting-with-the-iot-activation-program-what-do-you-need-to-know&quot;&gt;What do you need to know?&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#what-is-nb-iot-or-lte-m&quot;&gt;What is NB-IoT or LTE-M?&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#narrowband-iot-nb-iot&quot;&gt;NB-IoT&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#long-term-evolution-for-machines-lte-m&quot;&gt;LTE-M&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#nb-iot-vs-lte-m&quot;&gt;NB-IoT vs LTE-M&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#connectivity-2g-and-3g&quot;&gt;Connectivity 2G and 3G&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#2g-networks-gprs-gsm&quot;&gt;2G Networks&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#3g-networks-hspa-umts&quot;&gt;3G Networks&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tcp-and-udp&quot;&gt;TCP and UDP&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#how-does-tcp-works&quot;&gt;TCP&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#how-does-udp-works&quot;&gt;UDP&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#what-is-the-difference-between-tcp-and-udp&quot;&gt;TCP vs UDP?&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#amazon-web-services-and-aws-iot&quot;&gt;AWS-IoT&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#why-are-we-different-kite-platform&quot;&gt;Why are we different? Kite Platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;welcome-to-iot-activation-of-telefonica&quot;&gt;Welcome to IoT-Activation of Telefonica&lt;/h1&gt;

&lt;h2 id=&quot;what-can-you-find-in-the-raspberry-starter-kit&quot;&gt;What can you find in the Raspberry Starter-kit?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Raspberry Pi 3 B+&lt;/li&gt;
  &lt;li&gt;Case for Raspberry&lt;/li&gt;
  &lt;li&gt;MicroSD with pre-installer NOOBS (Raspberry-pi SO)&lt;/li&gt;
  &lt;li&gt;Raspberry Pi universal Power Supply 2.5A 5.1V&lt;/li&gt;
  &lt;li&gt;Raspberry Pi Camera V2&lt;/li&gt;
  &lt;li&gt;Raspberry Pi Sense HAT&lt;/li&gt;
  &lt;li&gt;Huawei USB Stick&lt;/li&gt;
  &lt;li&gt;Telefonica SIM Card&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To learn how to configure your device and start developing your applications check out the following tutorial 
&lt;a href=&quot;RaspberryPi_StarterKit.md&quot;&gt;Raspberry Pi StarterKit guide&lt;/a&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	&lt;a href=&quot;RaspberryPi_StarterKit.md&quot; lign=&quot;center&quot;&gt;
		&lt;img src=&quot;pictures/Raspberry/Raspi_logol.png&quot; width=&quot;250&quot; height=&quot;75&quot; /&gt;
	&lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&quot;and-in-the-arduino-kit&quot;&gt;And in the Arduino kit?&lt;/h2&gt;

&lt;p&gt;In your Arduino Starterkit you can find the next components:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Arduino MKR NB-1500&lt;/li&gt;
  &lt;li&gt;Arduino Antenna GSM&lt;/li&gt;
  &lt;li&gt;Power Supply&lt;/li&gt;
  &lt;li&gt;Telefonica SIM Card&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To learn how to configure your device and start developing your applications check out the following tutorial 
&lt;a href=&quot;Arduino_StarterKit.md&quot;&gt;Arduino StarterKit guide&lt;/a&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	&lt;a href=&quot;Arduino_StarterKit.md&quot; lign=&quot;center&quot;&gt;
		&lt;img src=&quot;pictures/Arduino/Arduino_Logo.png&quot; width=&quot;150&quot; height=&quot;100&quot; /&gt;
	&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;before-starting-with-the-iot-activation-program-what-do-you-need-to-know&quot;&gt;Before starting with the IoT-Activation program… What do you need to know?&lt;/h1&gt;

&lt;h2 id=&quot;what-is-nb-iot-or-lte-m&quot;&gt;What is NB-IoT or LTE-M?&lt;/h2&gt;

&lt;p&gt;Surely you are already wondering how to connect these devices to intenet, 
and if there is a specific technology for it. The answer to these questions is yes.&lt;/p&gt;

&lt;p&gt;In the last few years, different radio communication technologies have been developed 
by different organizations.&lt;/p&gt;

&lt;p&gt;Amongst these new technologies developed for communication in the world of IoT 
we can highlight NB-IoT and LTE-M as the most entrenched for this purpose.&lt;/p&gt;

&lt;h3 id=&quot;narrowband-iot-nb-iot&quot;&gt;Narrowband IoT (NB-IoT)&lt;/h3&gt;

&lt;p&gt;Narrowband IoT is a radio technology standard.
It enables a wide range of simultaneous connections of a low power devices.&lt;/p&gt;

&lt;p&gt;NB-IoT does not need a high speed connection on the other hand it needs a stable connection. 
It focuses specifically on indoor coverage.&lt;/p&gt;

&lt;p&gt;low power consumption enables a battery life of several years.&lt;/p&gt;

&lt;p&gt;Likewise, it preserves all characteristic of security and privacy of a mobile net.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	&lt;a href=&quot;README.md&quot;&gt;
		&lt;img src=&quot;pictures/miscellaneous/nbiot_logo.png&quot; width=&quot;250&quot; height=&quot;75&quot; /&gt;
	&lt;/a&gt;
&lt;/p&gt;

&lt;h3 id=&quot;long-term-evolution-for-machines-lte-m&quot;&gt;Long Term Evolution for Machines (LTE-M)&lt;/h3&gt;

&lt;p&gt;LTE is a standard for high-speed wireless communication for mobile devices.&lt;/p&gt;

&lt;p&gt;It allows bigger rate of data enable a real-time communication voice included.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	&lt;a href=&quot;README.md&quot;&gt;
		&lt;img src=&quot;pictures/miscellaneous/ltem_logo.png&quot; width=&quot;250&quot; height=&quot;75&quot; /&gt;
	&lt;/a&gt;
&lt;/p&gt;

&lt;h3 id=&quot;nb-iot-vs-lte-m&quot;&gt;NB-IoT vs LTE-M&lt;/h3&gt;
&lt;p&gt;Both standards are focus in wireless communication between devices.
They are good connectivity options to take advantage of Low Power Wide Area Network&lt;/p&gt;

&lt;p&gt;Deciding between LTE-M and NB-IoT requires an understanding of the key differences between these two technologies.
After analysing the similarities and differences between LTE-M and NB-IoT, you should be able to make a correct decision.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;NB-IoT&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;LTE-M&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;high connection density&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;mobile devices&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;limited bandwidth&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;high-speed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;long battery life&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;long battery life&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;focus in indoor coverage&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;focus in real-time communication&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;low cost&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;low cost&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If you have any doubt about what type of connection you should use for your devices we can clarify that 
the choice between LTE-M and NB-IoT depends on the amount of data and the frequency your application needs.&lt;/p&gt;

&lt;p&gt;Choose LTE-M if you need real-time communication, on the other hand if you need many devices or sensors and do not need&lt;br /&gt;
a precision tracking data, you should choose NB-IoT.&lt;/p&gt;

&lt;p&gt;But when dealing with moving devices you can use a multi-technology NBIoT/LTE-M solution to guarantee the services.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;connectivity-2g-and-3g&quot;&gt;Connectivity 2G and 3G&lt;/h2&gt;

&lt;p&gt;Surely more than once you have read acronyms such as 2G, 3G, 4G, GPRS, HDSPA or LTE among others 
on the screen of your mobile. If you don’t know exactly what they mean, 
If you don’t know exactly what they mean, we’ll explain the differences between 2G and 3G 
so you don’t get stuck with the doubt.&lt;/p&gt;

&lt;h4 id=&quot;2g-networks-gprs-gsm&quot;&gt;2G Networks (GPRS, GSM)&lt;/h4&gt;
&lt;p&gt;They are the second generation networks and therefore lower speed networks.&lt;/p&gt;

&lt;h4 id=&quot;3g-networks-hspa-umts&quot;&gt;3G Networks (HSPA, UMTS)&lt;/h4&gt;
&lt;p&gt;They are third-generation networks. The main difference between 3G and 2G networks 
is that 3G offers a higher transmission speed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;tcp-and-udp&quot;&gt;TCP and UDP&lt;/h2&gt;
&lt;p&gt;As you know, when two devices need to communicate with each other, it is logical for them to do so over the Internet. 
What you may not know is that in establishing this data exchange, 
there is a set of rules and regulations known as Internet Protocols (IP). 
Although there is a diversity of them, which in turn are included within other protocols, t
he most common protocols used in data transmission are TCP and UDP&lt;/p&gt;

&lt;p&gt;At first glance it may not seem important to use them indistinctly, 
but in the next section you will see the advantages and weaknesses of each protocol.&lt;/p&gt;

&lt;h3 id=&quot;how-does-tcp-works&quot;&gt;How does TCP works?&lt;/h3&gt;
&lt;p&gt;TCP is the main protocol on Internet and is a connection-based protocol. This means that before starting a transmission, 
a device needs to connect to the receiver and confirm that the receiver is listening to them.&lt;/p&gt;

&lt;p&gt;Then the device divides the information into packets and sends them in order after confirming 
that they have been received correctly.&lt;/p&gt;

&lt;p&gt;Each time the receiver receives one of the packets, it has the task of verifying if the content is correct 
and make the decision whether to request the shipment again or request the next packet until the shipment is complete.&lt;/p&gt;

&lt;p&gt;Although it is a slow process, TCP guarantees that all data has been received correctly.&lt;/p&gt;

&lt;h3 id=&quot;how-does-udp-works&quot;&gt;How does UDP works?&lt;/h3&gt;
&lt;p&gt;UDP is one of the simplest and fastest protocols used for communication between devices over the Internet. 
Unlike other protocols, UDP only divides the information into packets and sends them to the destination.&lt;/p&gt;

&lt;p&gt;For this reason it is not necessary to wait for a confirmation. 
UDP is limited to sending the packets no matter what happens.&lt;/p&gt;

&lt;p&gt;Although simple and fast, this protocol doesn’t guarantee that the data will be received correctly.&lt;/p&gt;

&lt;h3 id=&quot;what-is-the-difference-between-tcp-and-udp&quot;&gt;What is the difference between TCP and UDP?&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Transmission Control Protocol (TCP)&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;User Datagram Protocol (UDP)&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Protocol oriented to connections and it guarantees receive all the packets in order&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Easier and does not need to establish a connection&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Hight reliability and slow transmission time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Fast transmission time for a large number of clients&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Error checking and quality guarantee for shipment&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Error checking without recovery&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;For these reasons when choosing one of the protocols, it is necessary to assess the needs of the application.
If we need the data transmission to be reliable we will choose TCP, 
however if we need a fast data transmission and we can afford the loss of some of this, UDP is our best option.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;amazon-web-services-and-aws-iot&quot;&gt;Amazon Web Services and AWS-IoT&lt;/h2&gt;

&lt;p&gt;Today Amazon Web Services is one of the largest providers of cloud computing services,
and some of its products focus exclusively on the development of IoT technologies.&lt;/p&gt;

&lt;p&gt;AWS-IoT provides secure, two-way communication between multiple devices connected to the Internet.
This allows you to collect and process telemetry from Internet-connected devices and control them remotely.
You can create rules that define an action to be performed based on the message received.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;why-are-we-different-kite-platform&quot;&gt;Why are we different? Kite Platform&lt;/h1&gt;

&lt;p&gt;Connectivity management functionalities like inventory, real time expenses control, alarms, 
automatic business rules or reporting.&lt;/p&gt;

&lt;p&gt;Remote management of devices that allow features like APN configuration, remote firmware updates, 
remote device resets and remote diagnostics.&lt;/p&gt;

&lt;p&gt;Cloud connectors that eases integration amongst the main public cloud platforms and apps.&lt;/p&gt;

&lt;p&gt;Discover Kite &lt;a href=&quot;Movistar_Kite_Platform.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 19 Dec 2018 18:07:00 +0100</pubDate>
        <link>http://localhost:4000/README.html</link>
        <guid isPermaLink="true">http://localhost:4000/README.html</guid>
        
        
        <category>IoT</category>
        
      </item>
    
      <item>
        <title>Arduino Aws</title>
        <description>&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#arduino-mkr-nb-1500-to-aws-iot&quot;&gt;Arduino: MKR NB-1500 to AWS-IoT&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#getting-started-with-the-mkr-nb-1500&quot;&gt;Getting started with the MKR NB-1500&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#what-you-will-need&quot;&gt;What you will need&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#what-you-will-learn&quot;&gt;What you will learn&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#open-an-account-at-aws-iot&quot;&gt;Open an account at AWS-IoT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#create-arduino-thing-in-aws-iot&quot;&gt;Create Arduino thing in AWS-IoT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#what-is-mqtt&quot;&gt;What is MQTT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#test-your-certificates-with-mqttfx&quot;&gt;Test your Certificates with MQTT.fx&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#how-to-comunicate-with-aws&quot;&gt;How to comunicate with AWS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-to-start-with-the-project&quot;&gt;How to Start with the project&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#arduino-board-run-a-code-file&quot;&gt;Arduino Board: Run a code file&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#udp-data-bridge-connecting-using-nb-iot-o-lte-m&quot;&gt;UDP data Bridge: Connecting using NB-IoT o LTE-M&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#check-the-shadow&quot;&gt;Check the Shadow&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#send-a-command&quot;&gt;Send a command&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;arduino-mkr-nb-1500-to-aws-iot&quot;&gt;Arduino: MKR NB-1500 to AWS-IoT&lt;/h1&gt;

&lt;p&gt;For this project, we will take different values from the Arduino board and publish them in AWS.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;      
	  &lt;img title=&quot;Project_ard&quot; src=&quot;pictures/schematics/overview_arduino_AWS.png&quot; href=&quot;docs/Arduino_AWS.md&quot; /&gt;	  
&lt;/p&gt;

&lt;h2 id=&quot;getting-started-with-the-mkr-nb-1500&quot;&gt;Getting started with the MKR NB-1500&lt;/h2&gt;

&lt;h4 id=&quot;what-you-will-need&quot;&gt;What you will need&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Finish successfully the Arduino Starterkit tutorial&lt;/li&gt;
  &lt;li&gt;Arduino board MKR NB-1500&lt;/li&gt;
  &lt;li&gt;Micro USB cable&lt;/li&gt;
  &lt;li&gt;Arduino IDE&lt;/li&gt;
  &lt;li&gt;AWS account&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;what-you-will-learn&quot;&gt;What you will learn&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Control Arduino board MKR NB-1500 using the Arduino IDE&lt;/li&gt;
  &lt;li&gt;Register a device on AWS&lt;/li&gt;
  &lt;li&gt;Generate credentials for AWS&lt;/li&gt;
  &lt;li&gt;Build a bridge between UDP and MQTT with Python&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have successfully completed the Arduino Starterkit tutorial, all the necessary software is already updated.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;open-an-account-at-aws-iot&quot;&gt;Open an account at AWS-IoT&lt;/h2&gt;
&lt;p&gt;(Soon)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-arduino-thing-in-aws-iot&quot;&gt;Create Arduino thing in AWS-IoT&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Sign in to the AWS Management Console, and then open the AWS IoT console at https://console.aws.amazon.com/iot&lt;/li&gt;
  &lt;li&gt;Go to the Monitor page. In the left navigation panel, choose Manage, and then choose Things.
&lt;img src=&quot;pictures/AWS/AWS_Console.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;You don’t have a thing created yet page. Choose Register a thing.
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Register.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;On the Creating AWS IoT things page, choose Create a single thing.
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Register_things.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Enter a name for the device, leave the default values for all the other fields, and then choose Next.
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Register_Device.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Now generates the certificates.
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Certificates.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Download your public and private keys, certificate, and root certificate authority (CA)on your PC. 
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Certificates_Download.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;For download your root certificate authority a new window is open for select a CA to download
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Certificates_Download_CA.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Don’t forget to save these files, you need them to set the connection&lt;/li&gt;
  &lt;li&gt;Returns to the previous window and &lt;strong&gt;Activate&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Attach a policy&lt;/strong&gt;
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Certificates_Download.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Close this window, before you need to create and attach a new policy to the certificate
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Certificates_AttachPolicy.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Open the AWS IoT console again https://console.aws.amazon.com/iot&lt;/li&gt;
  &lt;li&gt;In the left navigation panel, choose &lt;strong&gt;Secure&lt;/strong&gt;, and then choose &lt;strong&gt;Policies&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Create a Policy&lt;/strong&gt;
&lt;img src=&quot;pictures/AWS/AWS_Console_Secure_Policies.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Enter a Name for the policy:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Action&lt;/strong&gt;        enter &lt;strong&gt;iot:&lt;/strong&gt;*&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Resource ARN&lt;/strong&gt;  enter &lt;strong&gt;*&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Effect&lt;/strong&gt;        choose &lt;strong&gt;Allow&lt;/strong&gt;
Select Create. This policy allows your Device to publish messages to AWS IoT.
&lt;img src=&quot;pictures/AWS/AWS_Console_Secure_Policies_Create_Device.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;In the AWS IoT console, choose &lt;strong&gt;Manage&lt;/strong&gt;, &lt;strong&gt;Things&lt;/strong&gt;. On the Things page, choose your Thing
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Device.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;On the thing’s &lt;strong&gt;Details&lt;/strong&gt; page, in the left navigation panel, choose &lt;strong&gt;Interact&lt;/strong&gt;.
Make a note of the REST API endpoint. You need it to connect to your device shadow.
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Interact_Device.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Now select &lt;strong&gt;Security&lt;/strong&gt;, and choose the certificate that you created earlier. 
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Security_Device.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;In Actions, choose Attach policy
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Security_Policy_Device.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Select your new policy and then choose Attach 
&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Security_Policy_Attach_Device.png&quot; alt=&quot;pic&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-is-mqtt&quot;&gt;What is MQTT&lt;/h2&gt;
&lt;p&gt;MQTT is a machine-to-machine (M2M)/”Internet of Things” connectivity protocol. 
It was designed as an extremely lightweight publish/subscribe messaging transport.&lt;/p&gt;

&lt;p&gt;The first concept is the publish and subscribe system. 
A device can publish a message on a topic, 
or it can be subscribed to a topic to receive messages&lt;/p&gt;

&lt;p&gt;AWS use this system to communicate with your devices&lt;/p&gt;

&lt;p&gt;If you access to AWS Management Console.In the left navigation panel, choose Manage, and then choose Things.
When choose a thing you can find out the different topic that you can subscribe/publish 
Select &lt;em&gt;**Interact&lt;/em&gt; to copy they&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Interact_MQTT_Device.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At the moment, you only need to know three topics:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Update to this thing shadow
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyDevice/shadow/update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Update to this thing shadow was accepted
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyDevice/shadow/update/accepted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Update to this thing shadow was rejected
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyDevice/shadow/update/rejected
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;test-your-certificates-with-mqttfx&quot;&gt;Test your Certificates with MQTT.fx&lt;/h2&gt;

&lt;p&gt;One of the best ways to make sure that certificates have been created correctly is to try connecting via a 
MQTT client with graphical interface.&lt;/p&gt;

&lt;p&gt;We recommend you download MQTT.fx from the following link https://mqttfx.jensd.de/&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open MQTT.fx and create a new connection.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;pictures/MQTT/MQTTFX_open.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Configure the broker as shown in the image below.
Remember to use the files you downloaded in the previous step. And configure the broker address associated to your device.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;pictures/MQTT/MQTTFX_Broker_Connect.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Now that you are connected to the broker, you need to subscribe to the topics to know the state of the shadow: 
accepted and rejected.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Every time a message is published in the topic to update the shadow, 
you can check in these topics if the message has been &lt;strong&gt;accepted&lt;/strong&gt; or &lt;strong&gt;rejected&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyDevice/shadow/update/accepted
$aws/things/MyDevice/shadow/update/rejected
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;pictures/MQTT/MQTTFX_Topic_Subscribe_Device.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To update your device’s shadow, You should publish in the topic the following &lt;strong&gt;json file&lt;/strong&gt;, 
you can use the following link to validate it https://jsonlint.com/&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;state&quot;: {
        &quot;reported&quot; : { 
            &quot;voltage&quot; : 22    
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This file will simulate the publishing of a device to make voltage measurements.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Shadow_Device.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Choose the topic to update your shadow.
Be sure to select the service quality level as QoS 0, amazon doesn’t allow a different police.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyDevice/shadow/update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;pictures/MQTT/MQTTFX_Topic_Publish_Device.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;For delete the shadow’s document publish the next &lt;strong&gt;json file&lt;/strong&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
 &quot;state&quot;: null
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Play with this, sending different values until you understand how it works.
:thumbsup: Remember to check if your values has been accepted or rejected&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-to-comunicate-with-aws&quot;&gt;How to comunicate with AWS&lt;/h2&gt;

&lt;p&gt;As you know, when you register a new device in AWS, several topics are created by default. Using them you can send data and receive information.&lt;/p&gt;

&lt;p&gt;For the time being,  you only need to know a couple of them:&lt;/p&gt;

&lt;p&gt;topic Update&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyDevice/shadow/update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;this topic is where you publish the status of the device,
in this tutorial this information is composed by the values of the sensors as the current color of the LED display.&lt;/p&gt;

&lt;p&gt;topic Delta&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$aws/things/MyDevice/shadow/update/delta
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is the channel that AWS uses to communicate the &lt;strong&gt;desired&lt;/strong&gt; changes to the device.
In this case we use the MQTT.fx to communicate these changes to AWS and to report the change to the device.&lt;/p&gt;

&lt;p&gt;All these changes are recorded in the &lt;strong&gt;shadow&lt;/strong&gt; of the device. 
To see the current status just access the AWS core as you saw in the previous section.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;pictures/AWS/AWS_Console_Manage_Things_Details_Shadow_Delta_Device.png&quot; alt=&quot;pic&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;desired&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Warning&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reported&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;OK&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;voltage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;amperage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;delta&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Warning&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As you notice in the previous file, there are three main keys:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;“desired”: Contains the desired state, sent from the MQTT.fx&lt;/li&gt;
  &lt;li&gt;“reported”: Contains the status information reported by the device&lt;/li&gt;
  &lt;li&gt;“delta”: contains the differences between the reported status and the desired status. 
This is the information that is published in the delta topic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-to-start-with-the-project&quot;&gt;How to Start with the project&lt;/h1&gt;

&lt;p&gt;We will explain it to you later in detail how to play with it step by step, 
In this tutorial you need to be familiar with the following concepts&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Run a code file on your Arduino Board&lt;/li&gt;
  &lt;li&gt;Run a python server with the credentials manager&lt;/li&gt;
  &lt;li&gt;Upload the credentials files to a Server&lt;/li&gt;
  &lt;li&gt;Use MQTT.fx to post messages in a topic&lt;/li&gt;
  &lt;li&gt;Get the shadow from AWS core&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you can connect to the internet and send your data through the UDP protocol.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;arduino-board-run-a-code-file&quot;&gt;Arduino Board: Run a code file&lt;/h2&gt;

&lt;p&gt;For this Arduino project, it is necessary that you include some of the classes we have prepared exclusively 
for this tutorial. To do this, be sure to open the &lt;strong&gt;.ino&lt;/strong&gt; file from the following 
&lt;a href=&quot;../scripts/Arduino/Connection_UDP&quot;&gt;folder&lt;/a&gt;. 
There are all the files you need.&lt;/p&gt;

&lt;p&gt;In the following code you can see the main structure of the program:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Measuring&lt;/li&gt;
  &lt;li&gt;Modem connection to the network&lt;/li&gt;
  &lt;li&gt;Sending of the measures&lt;/li&gt;
  &lt;li&gt;Disconnection of the modem to reduce power consumption&lt;/li&gt;
  &lt;li&gt;Sampling timeout
```c
}&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;void loop() {
  // put your main code here, to run repeatedly:&lt;/p&gt;

&lt;p&gt;Serial.println(“measuring…”);
  data.measurement();
  Serial.print(“- voltage: “);
  Serial.println(data.get_voltage());
  Serial.print(“- amperage: “); 
  Serial.println(data.get_amperage());&lt;/p&gt;

&lt;p&gt;Serial.println(“Sending… “);   &lt;br /&gt;
  nbAccess.noLowPowerMode();
  send_data_UDP(data.get_voltage(),data.get_amperage()); 
  nbAccess.lowPowerMode();&lt;/p&gt;

&lt;p&gt;delay(polling);
}&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;But first of all, don't forget to complete the configuration [file](../scripts/Arduino/Connection_UDP/configuration.h)

In the you have to complete the necessary information to complete the sending of information to the UDP server.
```c
//complete only if your SIM card has a PIN lock code
#define SECRET_PINNUMBER &quot;&quot;  

//Samples sent every 5 seconds 
#define POLL_TIME 5

//IP address and port of your UDP server
#define LOCAL_PORT 4114
#define IP_ADDRESS XXX,XXX,XXX,XXX

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;udp-data-bridge-connecting-using-nb-iot-o-lte-m&quot;&gt;UDP data Bridge: Connecting using NB-IoT o LTE-M&lt;/h2&gt;

&lt;p&gt;One of the advantages of an iot device, is to be able to stop the connection when it is not necessary 
to decrease the energy consumption.&lt;/p&gt;

&lt;p&gt;From iot-activation we suggest you the mounting of a data bridge between the UDP sending of your Arduino and the 
AWS MQTT protocol.&lt;/p&gt;

&lt;p&gt;This allows you to increase the intelligence of your devices by integrating the Kite Platform into this server,
and this add extra security in sending data over the network. 
By updating your Kite SIM information, the data bridge recognizes the SIM and automatically connects to 
the corresponding AWS MQTT broker.&lt;/p&gt;

&lt;p&gt;Solo tendrás que asegurarte de añadir el nombre de la cosa como uno de los campos propios de la SIM en Kite
&lt;a href=&quot;Movistar_Kite_Platform.md#sim-identification&quot;&gt;Kite&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href=&quot;../scripts/Python/UDP_to_MQTT_Bridge&quot;&gt;bridge&lt;/a&gt;
is the easiest way to connect to AWS using only one UDP send&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;###############################################################################&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;############################### LOOP  listening ###############################&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;###############################################################################&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOCK_DGRAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UDP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UDP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])))&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;udp_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;udp_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvfrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Received message[ &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s ] from [ &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s ]&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;udp_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;udp_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;udp_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;udp_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config_cloud&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;ack_msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Sending ACK [ &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s ]&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ack_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sock_send&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOCK_DGRAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sock_send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ack_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;udp_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UDP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sock_send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ACK sent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;check-the-shadow&quot;&gt;Check the Shadow&lt;/h2&gt;

&lt;p&gt;Before starting the execution you will see how your shadow is empty. 
With this script you can send voltage and current values
This updated the shadow with each shipment of the device every few seconds.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;send-a-command&quot;&gt;Send a command&lt;/h2&gt;

&lt;p&gt;To send a command to the device you must use the MQTT as explained in the previous section through the json that we provide. 
You can change this instruction as many times as needed.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;state&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;desired&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Wait&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;&lt;img src=&quot;pictures/utils/arrow_up.png&quot; alt=&quot;pic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 19 Dec 2018 18:07:00 +0100</pubDate>
        <link>http://localhost:4000/arduinoaws.html</link>
        <guid isPermaLink="true">http://localhost:4000/arduinoaws.html</guid>
        
        
        <category>arduino</category>
        
      </item>
    
  </channel>
</rss>
